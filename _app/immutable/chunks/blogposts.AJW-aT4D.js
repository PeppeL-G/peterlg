import{s as vn,n as Pe}from"./scheduler.KwwHePks.js";import{S as yn,i as gn,e as o,a as l,b as j,h as t,j as H,k as e,q as Yn,r as Tn,s as p,u as Hn,d as i,v as q,l as kt,A as Mn,c as cn,g as r,f as hn,m as mn,t as dn,n as kn,o as fn,H as ie,w as re}from"./index.D4HSZ1Nh.js";import{e as On}from"./each.DmjhFfyi.js";function Wn(T,h,v){const f=T.slice();return f[1]=h[v],f}function $n(T){let h,v,f=T[1].number+"",k,M,w,x=Nn(T[1])+"",I,y;return{c(){h=o("div"),v=o("div"),k=Tn(f),M=p(),w=o("div"),I=Tn(x),y=p(),this.h()},l(b){h=l(b,"DIV",{});var L=j(h);v=l(L,"DIV",{class:!0});var C=j(v);k=Hn(C,f),C.forEach(t),M=i(L),w=l(L,"DIV",{class:!0});var _=j(w);I=Hn(_,x),_.forEach(t),y=i(L),L.forEach(t),this.h()},h(){H(v,"class","number"),H(w,"class","text"),q(h,"background-color",T[1].color)},m(b,L){e(b,h,L),kt(h,v),kt(v,k),kt(h,M),kt(h,w),kt(w,I),kt(h,y)},p(b,L){L&1&&f!==(f=b[1].number+"")&&Mn(k,f),L&1&&x!==(x=Nn(b[1])+"")&&Mn(I,x),L&1&&q(h,"background-color",b[1].color)},d(b){b&&t(h)}}}function Kn(T){let h,v=On(Dn(T[0])),f=[];for(let k=0;k<v.length;k+=1)f[k]=$n(Wn(T,v,k));return{c(){h=o("div");for(let k=0;k<f.length;k+=1)f[k].c();this.h()},l(k){h=l(k,"DIV",{class:!0});var M=j(h);for(let w=0;w<f.length;w+=1)f[w].l(M);M.forEach(t),this.h()},h(){H(h,"class","instructions svelte-sl4sn6")},m(k,M){e(k,h,M);for(let w=0;w<f.length;w+=1)f[w]&&f[w].m(h,null)},p(k,[M]){if(M&1){v=On(Dn(k[0]));let w;for(w=0;w<v.length;w+=1){const x=Wn(k,v,w);f[w]?f[w].p(x,M):(f[w]=$n(x),f[w].c(),f[w].m(h,null))}for(;w<f.length;w+=1)f[w].d(1);f.length=v.length}},i:Pe,o:Pe,d(k){k&&t(h),Yn(f,k)}}}function Dn(T){return T.trim().split(/\r?\n/).map(h=>{const[v,f]=h.split(" ").map(k=>k.trim());return{color:v,number:f}})}function Nn(T){return T.number=="..."?"...":`Instruction ${String.fromCharCode(64+parseInt(T.number))}`}function Jn(T,h,v){let{instructionsText:f=""}=h;return T.$$set=k=>{"instructionsText"in k&&v(0,f=k.instructionsText)},[f]}class Gn extends yn{constructor(h){super(),gn(this,h,Jn,Kn,vn,{instructionsText:0})}}function Qn(T){let h,v="Many programming languages these days offer two different ways of doing nothing for <code>x</code> milliseconds:",f,k,M='<thead><tr><th>Language</th> <th>Synchronous</th> <th>Asynchronous</th></tr></thead> <tbody><tr><td>C#</td> <td><a href="https://learn.microsoft.com/en-us/dotnet/api/system.threading.thread.sleep?view=net-8.0" rel="nofollow" target="_blank">Thread.Sleep()</a></td> <td><a href="https://learn.microsoft.com/en-us/dotnet/api/system.threading.tasks.task.delay?view=net-8.0" rel="nofollow" target="_blank">Task.Delay()</a></td></tr> <tr><td>Kotlin</td> <td><a href="https://docs.oracle.com/en/java/javase/22/docs/api/java.base/java/lang/Thread.html#sleep(long)" rel="nofollow" target="_blank">Thread.sleep()</a></td> <td><a href="https://kotlinlang.org/api/kotlinx.coroutines/kotlinx-coroutines-core/kotlinx.coroutines/delay.html" rel="nofollow" target="_blank">delay()</a></td></tr> <tr><td>Python</td> <td><a href="https://docs.python.org/3/library/time.html#time.sleep" rel="nofollow" target="_blank">time.sleep</a></td> <td><a href="https://docs.python.org/3/library/asyncio-task.html#asyncio.sleep" rel="nofollow" target="_blank">asyncio.sleep()</a></td></tr> <tr><td>Etc.</td> <td>...</td> <td>...</td></tr></tbody>',w,x,I="As has been hinted, you must know the difference between synchronous programming and asynchronous programming to understand when to use which of the two versions. This blogpost aims to explain why it's important to use the right one, and what happens if you use the wrong one.",y,b,L='<p style="font-weight: bold; text-align: center;">WARNING</p> <p>In this blogpost, some simplifications have been made to keep things simple (for examples, <a href="https://en.wikipedia.org/wiki/Multi-core_processor" rel="nofollow" target="_blank">multi-core processors</a> and <a href="https://en.wikipedia.org/wiki/Hyper-threading" rel="nofollow" target="_blank">hyper-threading</a> do make it possible for computers to do multiple things at the same time, contrarily to what this blogpost will claim), but the explained difference between synchronous programming and asynchronous programming is still accurate.</p>',C,_,ft='Doing things "concurrently" on a computer',P,z,Nt='A computer can be seen as a very simple machine that can only execute one instruction at a time. This essentially means that only one program at a time can run on a computer, but the clever usage of <a href="https://en.wikipedia.org/wiki/Time-sharing" rel="nofollow" target="_blank">time-sharing</a> makes it possible to fool us humans into thinking that multiple programs are running at the same time.',O,F,wt='For example, if you want to run three programs at "the same time" on a computer, the computer will:',Y,V,K="<li>First run the first program for a few milliseconds</li> <li>Then run the second program for a few milliseconds</li> <li>Then run the third program for a few milliseconds</li> <li>Then run the first program for a few milliseconds again</li> <li>Then run the second program for a few milliseconds again</li> <li>Etc.</li>",Mt,W,J="The computer swaps between running the programs so fast, so we humans don't notice that it is happening!",Gt,E,G='Below is a visualization of this, where the red, lime and yellow programs run "at the same time", and you can see the order the computer executes the instructions in the programs (first two instructions in red are executed, then 3 instructions in lime, then 2 instructions in yellow, etc.).',Lt,$,ut,D,Q='One big downside with this approach is that it takes quite a long time for the computer to swap between programs running. When the computer swaps program, it is actually the <a href="https://en.wikipedia.org/wiki/Operating_system" rel="nofollow" target="_blank">Operating System</a> (OS) program that has ordered the computer to execute some instructions to do the swapping, so a more accurate visualization of what actually has happened is something like this (where the aqua program is the OS program running that instructs the computer to do the swapping):',It,Z,A,U,Pt=`The computer still runs the programs so fast that we humans won't notice that it actually only runs one program at a time, but as you understand, the more often the computer is swapping program, the slower our programs will run, because much computation is "wasted" on doing the swapping, and not on running the programs.`,N,vt,X="Concurrency in a synchronous program",tt,et,nt='A program itself often needs to do multiple things concurrently. For example, <a href="https://giphy.com/explore/animated" rel="nofollow" target="_blank">a GIF image can be animated</a>, so a GIF image can consist of multiple images, and when it&#39;s displayed on the screen by a program, the program will:',st,m,g="<li>First display the first image in the GIF on the screen</li> <li>Then wait a few milliseconds</li> <li>Then display the second image in the GIF on the screen</li> <li>Then wait a few milliseconds</li> <li>Then display the third image in the GIF on the screen</li> <li>Then wait a few milliseconds</li> <li>Etc.</li>",St,at,Ye="The waiting here can be done using a synchronous <code>sleep()</code> call. That basically tells the OS &quot;<em>I don&#39;t need to do anything for a few milliseconds</em>&quot;, and the OS can instruct the computer to swap to another program. Then, after a few milliseconds, the program will run again, and can instruct the computer to display the next image in the GIF on the screen, and so on.",Se,ot,ce="BUT, this basically means the program won't be able to do anything else but waiting and changing the image shown on the screen, because the program is stuck in this loop! So if the program would, for example, want to display multiple GIF images on the screen, only one of them would be updated! (unless one writes special code to update all the GIF images at the same time, but let's imagine that's not the case)",ke,lt,Ut='So, what programs can do to avoid this problem is to start this &quot;concurrent&quot; work that needs to be done in new <a href="https://en.wikipedia.org/wiki/Thread_(computing)" rel="nofollow" target="_blank">threads</a>. For simplicity, a thread can simply be seen as a separate program. So, if our red program would want to display 10 GIF images, it would instruct the computer to start 10 programs, each responsible for animating respective GIF image. I won&#39;t even try to visualize that in a figure, because the figure would be very big xD',Ke,qt,yt='So, even though we only have 3 "real" programs running, the computer will need to swap between 13 programs running! And with the swapping overhead from the OS program, this all becomes very, very slow, especially when other programs also wants to do some concurrent work too, so they will probably have a bunch of threads running as well. Does there exist a better way we can do this?',Ee,Et,gt="Concurrency in an asynchronous programming",Ae,At,bt="So, creating many threads to wait for something turned out to be bad. What can we do instead? Well, this is where asynchronous programming comes into the picture.",fe,ue,Yt="Just as the OS has a list of programs that want to run, each asynchronous program has its own list of tasks that should run when an <em>event</em> has happened. An event can for example be:",Kt,Jt,Qt="<li>When a specific point in time is happening</li> <li>When the computer has an Internet connection (after having lost it)</li> <li>When some new content has been written to a file</li> <li>When the computer receives an HTTP request</li> <li>When the computer receives back an HTTP response to an HTTP request it has sent</li> <li>Etc.</li>",Zt,Xt,te="So, a program doesn't need to create new threads to do the waiting, instead the program has a list of tasks that needs to be done, and the program carries out one of the tasks at a time (when the corresponding event has happened, or as soon as possible thereafter).",ee,ne,se="This way, the computer is not overwhelmed with swapping program to run. Instead, each asynchronous program simply changes which task to run. And to change which task to run is much faster than changing which program to run, so asynchronous programs tends to run faster than synchronous programs, and this is the benefit with asynchronous programs!",jt,zt,we='<p style="font-weight: bold; text-align: center;">Note</p> <p>Asynchronous programs run faster when there is concurrent work that needs to be done. If you have no concurrent work that needs to be done, then synchronous programs run faster, since they don&#39;t contain the overhead of a task list. In practice, it is often only small scripts that don&#39;t contain any concurrent work, so most programs can benefit from asynchronous programming.</p> <p>Also note that asynchronous programs often are a little bit harder to implement. No pain, no gain!</p>',pt,he,ve="What happens if I use asynchronous programming in my synchronous program?",B,xt,ye="You can't really do this. To use asynchronous programming, your program must have a list of tasks it should carry out, and it will have that if you are able to use asynchronous programming in it, which makes it an asynchronous program.",R,me,ge="If you try to use an asynchronous function/method in a synchronous program/a synchronous part of your program, you will often get an error from your compiler/runtime engine to let you know that you can't use the function/method.",it,de,be="What happens if I use synchronous programming in my asynchronous program?",rt,ae,Je="Ah, this is where it gets interesting. Nothing stops you from using synchronous programming in an asynchronous program. But it is very bad to do so. Let's take a look at an example to understand why.",Bt,Ct,je="Imagine your asynchronous program has the following three tasks it should complete:",Rt,ct,ze="<li>Draw the next image in a GIF on the screen</li> <li>Handle a received HTTP response (from a previously sent HTTP request)</li> <li>Handle a mouse button click</li>",Ft,_t,Be="Your program starts by carrying out Task 1. In it, you draw the next image in the GIF on the screen, and then you need to add this very same task to the list again 1 second later (by default, tasks are deleted from the list when they have been carried out). Here you need to wait for 1 second, and you should use the asynchronous version of wait (often called <code>delay(1000ms)</code>). Then your program can continue with carrying out Task 2, and then Task 3, immediately after you have called <code>delay(1000ms)</code>.",Vt,ht,Re="But, if you instead use the synchronous version of wait (often called <code>sleep(1000ms)</code>), then you tell the OS that your program does not need to run at all for 1 second, so even though Task 2 and Task 3 can run immediately after you have completed Task 1, they will not, because nothing in your program will be executed at all for 1 second. So, if you use synchronous programming in an asynchronous program, you prevent the program from being able to immediately run the other tasks it contains, so your program will overall run slower!",Ot,Tt,Fe="I don&#39;t use <code>sleep()</code>, do I need to care?",Wt,mt,Ve="<code>sleep()</code> is just the example I chose to go with. As I briefly mentioned, the benefit with asynchronous programming over synchronous programming (faster code execution) applies to all kind of waiting, and is not limited to <code>sleep()</code>. For example, all of the following operations includes waiting of some kind:",$t,Ht,Oe="<li>Write something to a file (waiting for the hard drive to report back a successful write)</li> <li>Read something from a file (waiting for the hard drive to report back the read content)</li> <li>Send an SQL query to a DB (waiting for the query to be sent to the DB over the Internet, then for the DB to execute the query, and then for the result to be sent back to the computer over the Internet)</li> <li>Send an HTTP request to a server (waiting for the HTTP request to be sent to the server over the Internet, then for the server to execute the request, and then for the HTTP response to be sent back to the computer over the Internet)</li> <li>Etc.</li>",Dt,dt,We="In all of these cases, you can benefit from using the asynchronous functions/methods instead of the synchronous ones.",S;return $=new Gn({props:{instructionsText:`
	red 1
	red 2
	lime 1
	lime 2
	lime 3
	yellow 1
	yellow 2
	red 3
	red 4
	lime 4
	yellow 3
	yellow 4
	red 5
	silver ...
`}}),Z=new Gn({props:{instructionsText:`
	red 1
	red 2
	aqua 1
	aqua 2
	lime 1
	lime 2
	lime 3
	aqua 3
	aqua 4
	yellow 1
	yellow 2
	aqua 5
	aqua 6
	red 3
	red 4
	aqua 7
	aqua 8
	lime 4
	aqua 9
	aqua 10
	yellow 3
	yellow 4
	aqua 11
	aqua 12
	red 5
	silver ...
`}}),{c(){h=o("p"),h.innerHTML=v,f=p(),k=o("table"),k.innerHTML=M,w=p(),x=o("p"),x.textContent=I,y=p(),b=o("div"),b.innerHTML=L,C=p(),_=o("h2"),_.textContent=ft,P=p(),z=o("p"),z.innerHTML=Nt,O=p(),F=o("p"),F.textContent=wt,Y=p(),V=o("ol"),V.innerHTML=K,Mt=p(),W=o("p"),W.textContent=J,Gt=p(),E=o("p"),E.textContent=G,Lt=p(),cn($.$$.fragment),ut=p(),D=o("p"),D.innerHTML=Q,It=p(),cn(Z.$$.fragment),A=p(),U=o("p"),U.textContent=Pt,N=p(),vt=o("h2"),vt.textContent=X,tt=p(),et=o("p"),et.innerHTML=nt,st=p(),m=o("ol"),m.innerHTML=g,St=p(),at=o("p"),at.innerHTML=Ye,Se=p(),ot=o("p"),ot.textContent=ce,ke=p(),lt=o("p"),lt.innerHTML=Ut,Ke=p(),qt=o("p"),qt.textContent=yt,Ee=p(),Et=o("h2"),Et.textContent=gt,Ae=p(),At=o("p"),At.textContent=bt,fe=p(),ue=o("p"),ue.innerHTML=Yt,Kt=p(),Jt=o("ul"),Jt.innerHTML=Qt,Zt=p(),Xt=o("p"),Xt.textContent=te,ee=p(),ne=o("p"),ne.textContent=se,jt=p(),zt=o("div"),zt.innerHTML=we,pt=p(),he=o("h2"),he.textContent=ve,B=p(),xt=o("p"),xt.textContent=ye,R=p(),me=o("p"),me.textContent=ge,it=p(),de=o("h2"),de.textContent=be,rt=p(),ae=o("p"),ae.textContent=Je,Bt=p(),Ct=o("p"),Ct.textContent=je,Rt=p(),ct=o("ol"),ct.innerHTML=ze,Ft=p(),_t=o("p"),_t.innerHTML=Be,Vt=p(),ht=o("p"),ht.innerHTML=Re,Ot=p(),Tt=o("h2"),Tt.innerHTML=Fe,Wt=p(),mt=o("p"),mt.innerHTML=Ve,$t=p(),Ht=o("ul"),Ht.innerHTML=Oe,Dt=p(),dt=o("p"),dt.textContent=We,this.h()},l(a){h=l(a,"P",{"data-svelte-h":!0}),r(h)!=="svelte-18gwc1d"&&(h.innerHTML=v),f=i(a),k=l(a,"TABLE",{border:!0,style:!0,"data-svelte-h":!0}),r(k)!=="svelte-jt43it"&&(k.innerHTML=M),w=i(a),x=l(a,"P",{"data-svelte-h":!0}),r(x)!=="svelte-a4cj4j"&&(x.textContent=I),y=i(a),b=l(a,"DIV",{style:!0,"data-svelte-h":!0}),r(b)!=="svelte-19ss81c"&&(b.innerHTML=L),C=i(a),_=l(a,"H2",{"data-svelte-h":!0}),r(_)!=="svelte-1ps40h5"&&(_.textContent=ft),P=i(a),z=l(a,"P",{"data-svelte-h":!0}),r(z)!=="svelte-2flo98"&&(z.innerHTML=Nt),O=i(a),F=l(a,"P",{"data-svelte-h":!0}),r(F)!=="svelte-resrc0"&&(F.textContent=wt),Y=i(a),V=l(a,"OL",{"data-svelte-h":!0}),r(V)!=="svelte-m4m6ur"&&(V.innerHTML=K),Mt=i(a),W=l(a,"P",{"data-svelte-h":!0}),r(W)!=="svelte-1x3f794"&&(W.textContent=J),Gt=i(a),E=l(a,"P",{"data-svelte-h":!0}),r(E)!=="svelte-nzp0mx"&&(E.textContent=G),Lt=i(a),hn($.$$.fragment,a),ut=i(a),D=l(a,"P",{"data-svelte-h":!0}),r(D)!=="svelte-dv97we"&&(D.innerHTML=Q),It=i(a),hn(Z.$$.fragment,a),A=i(a),U=l(a,"P",{"data-svelte-h":!0}),r(U)!=="svelte-8llzqw"&&(U.textContent=Pt),N=i(a),vt=l(a,"H2",{"data-svelte-h":!0}),r(vt)!=="svelte-apnwee"&&(vt.textContent=X),tt=i(a),et=l(a,"P",{"data-svelte-h":!0}),r(et)!=="svelte-1fly85w"&&(et.innerHTML=nt),st=i(a),m=l(a,"OL",{"data-svelte-h":!0}),r(m)!=="svelte-1kuozc1"&&(m.innerHTML=g),St=i(a),at=l(a,"P",{"data-svelte-h":!0}),r(at)!=="svelte-13t3wtd"&&(at.innerHTML=Ye),Se=i(a),ot=l(a,"P",{"data-svelte-h":!0}),r(ot)!=="svelte-1nibxv6"&&(ot.textContent=ce),ke=i(a),lt=l(a,"P",{"data-svelte-h":!0}),r(lt)!=="svelte-353v6v"&&(lt.innerHTML=Ut),Ke=i(a),qt=l(a,"P",{"data-svelte-h":!0}),r(qt)!=="svelte-1s3wbsa"&&(qt.textContent=yt),Ee=i(a),Et=l(a,"H2",{"data-svelte-h":!0}),r(Et)!=="svelte-13dn2lg"&&(Et.textContent=gt),Ae=i(a),At=l(a,"P",{"data-svelte-h":!0}),r(At)!=="svelte-13td8gh"&&(At.textContent=bt),fe=i(a),ue=l(a,"P",{"data-svelte-h":!0}),r(ue)!=="svelte-1h3l86"&&(ue.innerHTML=Yt),Kt=i(a),Jt=l(a,"UL",{"data-svelte-h":!0}),r(Jt)!=="svelte-zi31vr"&&(Jt.innerHTML=Qt),Zt=i(a),Xt=l(a,"P",{"data-svelte-h":!0}),r(Xt)!=="svelte-1byy06d"&&(Xt.textContent=te),ee=i(a),ne=l(a,"P",{"data-svelte-h":!0}),r(ne)!=="svelte-4dl956"&&(ne.textContent=se),jt=i(a),zt=l(a,"DIV",{style:!0,"data-svelte-h":!0}),r(zt)!=="svelte-1lfnr1h"&&(zt.innerHTML=we),pt=i(a),he=l(a,"H2",{"data-svelte-h":!0}),r(he)!=="svelte-l7m1ew"&&(he.textContent=ve),B=i(a),xt=l(a,"P",{"data-svelte-h":!0}),r(xt)!=="svelte-1yt6fqq"&&(xt.textContent=ye),R=i(a),me=l(a,"P",{"data-svelte-h":!0}),r(me)!=="svelte-5miumh"&&(me.textContent=ge),it=i(a),de=l(a,"H2",{"data-svelte-h":!0}),r(de)!=="svelte-157daeu"&&(de.textContent=be),rt=i(a),ae=l(a,"P",{"data-svelte-h":!0}),r(ae)!=="svelte-u640pl"&&(ae.textContent=Je),Bt=i(a),Ct=l(a,"P",{"data-svelte-h":!0}),r(Ct)!=="svelte-1rfcyqg"&&(Ct.textContent=je),Rt=i(a),ct=l(a,"OL",{"data-svelte-h":!0}),r(ct)!=="svelte-18t2cow"&&(ct.innerHTML=ze),Ft=i(a),_t=l(a,"P",{"data-svelte-h":!0}),r(_t)!=="svelte-w6lii3"&&(_t.innerHTML=Be),Vt=i(a),ht=l(a,"P",{"data-svelte-h":!0}),r(ht)!=="svelte-1hcgr69"&&(ht.innerHTML=Re),Ot=i(a),Tt=l(a,"H2",{"data-svelte-h":!0}),r(Tt)!=="svelte-12lnr66"&&(Tt.innerHTML=Fe),Wt=i(a),mt=l(a,"P",{"data-svelte-h":!0}),r(mt)!=="svelte-1o04p7n"&&(mt.innerHTML=Ve),$t=i(a),Ht=l(a,"UL",{"data-svelte-h":!0}),r(Ht)!=="svelte-1ljbwud"&&(Ht.innerHTML=Oe),Dt=i(a),dt=l(a,"P",{"data-svelte-h":!0}),r(dt)!=="svelte-1cz66q2"&&(dt.textContent=We),this.h()},h(){H(k,"border","1"),q(k,"margin","1em auto"),q(b,"background-color","yellow"),q(b,"border","2px solid black"),q(b,"margin","2em"),q(b,"padding","0.75em"),q(b,"border-radius","1.5em"),q(zt,"background-color","lime"),q(zt,"border","2px solid black"),q(zt,"margin","2em"),q(zt,"padding","0.75em"),q(zt,"border-radius","1.5em")},m(a,d){e(a,h,d),e(a,f,d),e(a,k,d),e(a,w,d),e(a,x,d),e(a,y,d),e(a,b,d),e(a,C,d),e(a,_,d),e(a,P,d),e(a,z,d),e(a,O,d),e(a,F,d),e(a,Y,d),e(a,V,d),e(a,Mt,d),e(a,W,d),e(a,Gt,d),e(a,E,d),e(a,Lt,d),mn($,a,d),e(a,ut,d),e(a,D,d),e(a,It,d),mn(Z,a,d),e(a,A,d),e(a,U,d),e(a,N,d),e(a,vt,d),e(a,tt,d),e(a,et,d),e(a,st,d),e(a,m,d),e(a,St,d),e(a,at,d),e(a,Se,d),e(a,ot,d),e(a,ke,d),e(a,lt,d),e(a,Ke,d),e(a,qt,d),e(a,Ee,d),e(a,Et,d),e(a,Ae,d),e(a,At,d),e(a,fe,d),e(a,ue,d),e(a,Kt,d),e(a,Jt,d),e(a,Zt,d),e(a,Xt,d),e(a,ee,d),e(a,ne,d),e(a,jt,d),e(a,zt,d),e(a,pt,d),e(a,he,d),e(a,B,d),e(a,xt,d),e(a,R,d),e(a,me,d),e(a,it,d),e(a,de,d),e(a,rt,d),e(a,ae,d),e(a,Bt,d),e(a,Ct,d),e(a,Rt,d),e(a,ct,d),e(a,Ft,d),e(a,_t,d),e(a,Vt,d),e(a,ht,d),e(a,Ot,d),e(a,Tt,d),e(a,Wt,d),e(a,mt,d),e(a,$t,d),e(a,Ht,d),e(a,Dt,d),e(a,dt,d),S=!0},p:Pe,i(a){S||(dn($.$$.fragment,a),dn(Z.$$.fragment,a),S=!0)},o(a){kn($.$$.fragment,a),kn(Z.$$.fragment,a),S=!1},d(a){a&&(t(h),t(f),t(k),t(w),t(x),t(y),t(b),t(C),t(_),t(P),t(z),t(O),t(F),t(Y),t(V),t(Mt),t(W),t(Gt),t(E),t(Lt),t(ut),t(D),t(It),t(A),t(U),t(N),t(vt),t(tt),t(et),t(st),t(m),t(St),t(at),t(Se),t(ot),t(ke),t(lt),t(Ke),t(qt),t(Ee),t(Et),t(Ae),t(At),t(fe),t(ue),t(Kt),t(Jt),t(Zt),t(Xt),t(ee),t(ne),t(jt),t(zt),t(pt),t(he),t(B),t(xt),t(R),t(me),t(it),t(de),t(rt),t(ae),t(Bt),t(Ct),t(Rt),t(ct),t(Ft),t(_t),t(Vt),t(ht),t(Ot),t(Tt),t(Wt),t(mt),t($t),t(Ht),t(Dt),t(dt)),fn($,a),fn(Z,a)}}}let Zn=class extends yn{constructor(h){super(),gn(this,h,null,Qn,vn,{})}};function Xn(T){let h,v,f,k,M,w,x,I,y,b,L;return{c(){h=o("label"),v=o("input"),f=p(),k=o("div"),M=Tn(T[3]),w=p(),x=o("div"),I=Tn(T[5]),y=p(),b=o("div"),L=Tn(T[4]),this.h()},l(C){h=l(C,"LABEL",{class:!0});var _=j(h);v=l(_,"INPUT",{type:!0,name:!0,placeholder:!0,class:!0}),f=i(_),k=l(_,"DIV",{class:!0});var ft=j(k);M=Hn(ft,T[3]),ft.forEach(t),w=i(_),x=l(_,"DIV",{class:!0});var P=j(x);I=Hn(P,T[5]),P.forEach(t),y=i(_),b=l(_,"DIV",{class:!0});var z=j(b);L=Hn(z,T[4]),z.forEach(t),_.forEach(t),this.h()},h(){H(v,"type",T[0]),H(v,"name",T[1]),v.value=T[2],H(v,"placeholder"," "),H(v,"class","svelte-nim7y5"),H(k,"class","title svelte-nim7y5"),H(x,"class","errorMessage svelte-nim7y5"),H(b,"class","hint svelte-nim7y5"),H(h,"class","svelte-nim7y5")},m(C,_){e(C,h,_),kt(h,v),kt(h,f),kt(h,k),kt(k,M),kt(h,w),kt(h,x),kt(x,I),kt(h,y),kt(h,b),kt(b,L)},p(C,[_]){_&1&&H(v,"type",C[0]),_&2&&H(v,"name",C[1]),_&4&&v.value!==C[2]&&(v.value=C[2]),_&8&&Mn(M,C[3]),_&32&&Mn(I,C[5]),_&16&&Mn(L,C[4])},i:Pe,o:Pe,d(C){C&&t(h)}}}function ts(T,h,v){let{type:f="text"}=h,{name:k=""}=h,{value:M=""}=h,{title:w=""}=h,{hint:x=""}=h,{errorMessage:I=""}=h;return T.$$set=y=>{"type"in y&&v(0,f=y.type),"name"in y&&v(1,k=y.name),"value"in y&&v(2,M=y.value),"title"in y&&v(3,w=y.title),"hint"in y&&v(4,x=y.hint),"errorMessage"in y&&v(5,I=y.errorMessage)},[f,k,M,w,x,I]}class _n extends yn{constructor(h){super(),gn(this,h,ts,Xn,vn,{type:0,name:1,value:2,title:3,hint:4,errorMessage:5})}}function es(T){let h,v="In one of my projects, I simply wanted to use a well-designed <code>&lt;input&gt;</code> component that is easy to use, but on the web I could only find half good ones requiring you to install an entire HTML &amp; CSS framework or a whole npm package, and some of them was even dependent on client-side JS to function. I wish I knew a website with HTML and CSS components where one simply can copy-paste all the HTML <em>and</em> CSS code for a component...",f,k,M="Since I don't know any such website, I decided to design such a component myself. And since that takes time, I'll post it here too, so others can benefit from using it too (not at least myself when I re-use it in my other projects 🙂).",w,x,I="Requirements",y,b,L="Before designing the component, let's go through the requirements I had for it, so I can motivate the design decisions I've made. The component:",C,_,ft="<li>Must be easy to use for developers</li> <li>Must work on both small and big screens</li> <li>Must work without client-side JavaScript</li> <li>Must be easy to use for users, including:<ul><li>Must show a label (so the user knows what data to enter)</li> <li>Must show a longer description/detailed information (if one is needed)</li> <li>Must show an error message (if one is needed)</li></ul></li>",P,z,Nt="Coming up with the HTML code",O,F,wt='To start with, we of course need an <a href="https://html.spec.whatwg.org/#the-input-element" rel="nofollow" target="_blank"><code>&lt;input&gt;</code></a> element:',Y,V,K,Mt='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">></span></span></code>',W,J,Gt='For the label, we should of course use the <a href="https://html.spec.whatwg.org/#the-label-element" rel="nofollow" target="_blank"><code>&lt;label&gt;</code></a> element. It can be used in two different ways with an <code>&lt;input&gt;</code> element:',E,G,Lt,$=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>The label<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>anId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code>`,ut,D,Q,It=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>
	The label
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code>`,Z,A,U="Developers will often have multiple instances of this component on the same page, and if going with the first approach, they would need to come up with <code>anId</code> and change it at two places each time they use this component, and that won&#39;t be convenient for them, and breaks the requirement <em>Must be easy to use for developers</em>. Therefor, I chose to go with the second approach.",Pt,N,vt='Next, for the longer description, I choose to simply use a <a href="https://html.spec.whatwg.org/#the-div-element" rel="nofollow" target="_blank"><code>&lt;div&gt;</code></a> element, since there doesn&#39;t exist an HTML element with the semantic meaning for this specific purpose. I could instead have used a <a href="https://html.spec.whatwg.org/#the-span-element" rel="nofollow" target="_blank"><code>&lt;span&gt;</code></a> element, but for two reasons I prefer using a <code>&lt;div&gt;</code> element:',X,tt,et="<li><code>&lt;div&gt;</code> is one letter shorter than <code>&lt;span&gt;</code>, so why have longer code for no good reason?</li> <li>Neither of <code>&lt;div&gt;</code> and <code>&lt;span&gt;</code> has semantic meaning, but <code>&lt;div&gt;</code> is a block element, and the description in this case is a text totally different from the other text in the <code>&lt;label&gt;</code> element, and to me it&#39;s more semantically correct to put text explaining different things in different blog elements</li>",nt,st,m="I'm not sure if I'm right about reason #2, but reason #1 is good enough on its own in my opinion, so I choose to go with:",g,St,at,Ye=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>
	The label
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>The description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code>`,Se,ot,ce="And to show an error message, I choose to add yet another <code>&lt;div&gt;</code> element that can contain that one:",ke,lt,Ut,Ke=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>
	The label
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>The description<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>The error message<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code>`,qt,yt,Ee="To later be able to style the different parts the component consists of with CSS, I:",Et,gt,Ae="<li>Wrap the text <code>The label</code> in a <code>&lt;div&gt;</code> element (which I now start to call <code>title</code> to make it more distinct from the <code>&lt;label&gt;</code> element, which in fact is the entire component)</li> <li>Add classes to all <code>&lt;div&gt;</code> elements</li>",At,bt,fe,ue=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>The title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>The hint<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>errorMessage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>The error message<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code>`,Yt,Kt,Jt="I also choose to start calling the <code>description</code> for <code>hint</code> instead, since I want the code to be as small as possible to make it easier to read (but still with good names, otherwise it won&#39;t be easier to read, of course).",Qt,Zt,Xt="This HTML code is very easy to copy-paste and then modify to your own case, right? Can't get much easier than this in my opinion, so this HTML code seems to be close to optimal in my opinion 🙂 At least I don't know how one can improve it more for developers, but I must admit I haven't taken accessability into account, so the code can probably be improved by taking that into account (but at the cost of being longer).",te,ee,ne="Coming up with the design/CSS code",se,jt,zt="When it comes to designing how the component should be visualized to the user, I chose to go with the <em>mobile-first</em> approach, since designing something to work good on a small screen is much harder than to design something to work good on a big screen. I tested many different designs, and optimally I would cover them all here, but that would take too long time to explain, so instead I&#39;ll simply show the final solution, and explain why I think that solution is a very good solution.",we,pt,he="Ready? OK, here it comes!",ve,B,xt,ye,R,me="<p>(the error message should of course be changed based on what the user enters in the <code>&lt;input&gt;</code> element, but that&#39;s out of scope for this blogpost)</p>",ge,it,de="Impressed? 😅 Let me continue by explaining why I think it's good.",be,rt,ae="Reason #1",Je,Bt,Ct="It looks and behaves/functions the same on small and big screens. Try resizing the example and verify this yourself. This makes it natural and easy for users to start using the component on a big screen after they have used it on a small screen, and vice versa.",je,Rt,ct="Sure, one can argue that if it works the same on both small and big screens, then one doesn't use one of them to its full potential, but I instead argue that it works good enough on both now (in fact really good in my opinion), and that the cost of making them work different on small and big screens is too high, and not worth it (cost in term of users using both small and big screens have to learn two different GUIs, and it gets more complicated for developers to maintain the bigger code base, etc.).",ze,Ft,_t="Reason #2",Be,Vt,ht=`There is no space not used/all space is "intelligently" used. For example, if one would show the title on one row, and the input field on the row below it, then all the space to the right of the title would be unused, and that's bad for small screens, which would be forced to show fewer input fields on the screen at the same time. But with this input component, more input fields can be shown at the same time.`,Re,Ot,Tt=`And I know one can reason that one should not "overwhelm" the user with too much info on the screen at one and the same time, but if that's a problem for you, one can easily fix that by adding white-space between the input component instances.`,Fe,Wt,mt="Reason #3",Ve,$t,Ht="Initially, only the most crucial info is shown to the user (the title and (if one exists) the error message), to avoid overwhelming the user with too much information initially. The title is also shown in a large font size when the <code>&lt;input&gt;</code> element is empty and not focused, so it&#39;s easy for the user to read it. The hint is only shown when the <code>&lt;input&gt;</code> element has focus, so we only show it to the user when the user needs to know it, and don&#39;t annoy the user with it before/after the user has any use of it. As elements shrink/grow (such as the hint when focusing the <code>&lt;input&gt;</code> element), other elements are not moved, but they stay at the same place where they are. In my opinion, it&#39;s very confusing when other elements starts to move/resize as a reaction to when  one element moves/resizes. CSS transforms are used to achieve this.",Oe,Dt,dt='A more realistic example is this (try resizing the example below, and note how the elements "intelligently" handle text overflow):',We,S,a,d,xe,Ce,$e,Xe,oe,en,_e,qe="For this component, the following HTML code is used:",nn,Te,He,Ln=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;title&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>errorMessage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;errorMessage&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;hint&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span></code>`,Qe,le,sn="Changes from the HTML code derived before:",wn,Me,De='<li>The <code>&lt;input&gt;</code> element needs to be the first child in the <code>&lt;label&gt;</code> element, so the other children are drawn in front of it</li> <li>The <code>&lt;input&gt;</code> element needs to have the <code>placeholder</code> attribute set to something (not empty), so we can use the CSS selector <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:placeholder-shown" rel="nofollow" target="_blank">:placeholder-shown</a> to figure out if the <code>&lt;input&gt;</code> element is empty or not</li>',an,Le,Ne="For the CSS code used, see next sub-chapter.",on,Ie,ln="In addition to accessability not taken into account, I have identified two potential drawbacks with this solution:",Ze,pe,bn="<li>Copying the title for the user can be hard</li> <li>Copying the hint for the user can be hard</li>",s,u,xn="But since that's not something users are expected to do, I can live with this. I hope my users can live with that too 🤣",pn,Ge,Cn="Encapsulating it in a component",rn,Ue,qn='It is very easy to encapsulate this component in a re-usable frontend framework component yourself (if you would only know the CSS code for it... 😅). Here&#39;s what the code for such a <a href="https://svelte.dev/" rel="nofollow" target="_blank">Svelte</a> component could look like (there, you finally got the CSS code!):',In,un,Pn,Un=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
	
	<span class="token keyword">export</span> <span class="token keyword">let</span> type <span class="token operator">=</span> <span class="token string">"text"</span>
	<span class="token keyword">export</span> <span class="token keyword">let</span> name <span class="token operator">=</span> <span class="token string">""</span>
	<span class="token keyword">export</span> <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token string">""</span>
	<span class="token keyword">export</span> <span class="token keyword">let</span> title <span class="token operator">=</span> <span class="token string">""</span>
	<span class="token keyword">export</span> <span class="token keyword">let</span> hint <span class="token operator">=</span> <span class="token string">""</span>
	<span class="token keyword">export</span> <span class="token keyword">let</span> errorMessage <span class="token operator">=</span> <span class="token string">""</span>
	
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">&#123;type&#125;</span> <span class="token attr-name">&#123;name&#125;</span> <span class="token attr-name">&#123;value&#125;</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> <span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;title&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>errorMessage<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;errorMessage&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hint<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;hint&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
	
	<span class="token selector">label</span><span class="token punctuation">&#123;</span>
		<span class="token property">display</span><span class="token punctuation">:</span> grid<span class="token punctuation">;</span>
		<span class="token property">grid-template-columns</span><span class="token punctuation">:</span> 0.75em auto 1fr auto 0.5em<span class="token punctuation">;</span>
		<span class="token property">grid-template-rows</span><span class="token punctuation">:</span> min-content min-content min-content<span class="token punctuation">;</span>
		<span class="token property">margin</span><span class="token punctuation">:</span> 1.5em 0<span class="token punctuation">;</span>
		<span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token selector">input</span><span class="token punctuation">&#123;</span>
		<span class="token property">grid-column</span><span class="token punctuation">:</span> 1 / span 5<span class="token punctuation">;</span>
		<span class="token property">grid-row</span><span class="token punctuation">:</span> 1 / span 3<span class="token punctuation">;</span>
		<span class="token property">background-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>
		<span class="token property">border-radius</span><span class="token punctuation">:</span> 0.5em<span class="token punctuation">;</span>
		<span class="token property">padding</span><span class="token punctuation">:</span> 0.5em<span class="token punctuation">;</span>
		<span class="token property">padding-left</span><span class="token punctuation">:</span> 0.75em<span class="token punctuation">;</span>
		<span class="token property">border-color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
		<span class="token property">font-size</span><span class="token punctuation">:</span> inherit<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token selector">.title</span><span class="token punctuation">&#123;</span>
		<span class="token property">grid-column</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>
		<span class="token property">grid-row</span><span class="token punctuation">:</span> 1 / span 3<span class="token punctuation">;</span>
		<span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
		<span class="token property">transition-property</span><span class="token punctuation">:</span> transform<span class="token punctuation">,</span> background-color<span class="token punctuation">;</span>
		<span class="token property">transition-duration</span><span class="token punctuation">:</span> 0.3s<span class="token punctuation">;</span>
		<span class="token property">transform-origin</span><span class="token punctuation">:</span> center left<span class="token punctuation">;</span>
		<span class="token property">padding</span><span class="token punctuation">:</span> 0.25em 0.75em<span class="token punctuation">;</span>
		<span class="token property">color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
		<span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
		<span class="token property">overflow</span><span class="token punctuation">:</span> scroll<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token selector">input:focus + .title,
	input:not(:placeholder-shown) + .title</span><span class="token punctuation">&#123;</span>
		<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-75%<span class="token punctuation">)</span> <span class="token function">scale</span><span class="token punctuation">(</span>70%<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
		<span class="token property">border-radius</span><span class="token punctuation">:</span> 0.5em<span class="token punctuation">;</span>
		<span class="token property">transition-property</span><span class="token punctuation">:</span> transform<span class="token punctuation">,</span> background-color<span class="token punctuation">;</span>
		<span class="token property">transition-duration</span><span class="token punctuation">:</span> 0.3s<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token selector">.hint</span><span class="token punctuation">&#123;</span>
		<span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
		<span class="token property">margin-left</span><span class="token punctuation">:</span> 5em<span class="token punctuation">;</span>
		<span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
		<span class="token property">right</span><span class="token punctuation">:</span> 0.5em<span class="token punctuation">;</span>
		<span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
		<span class="token property">background-color</span><span class="token punctuation">:</span> gray<span class="token punctuation">;</span>
		<span class="token property">border-bottom-left-radius</span><span class="token punctuation">:</span> 0.55em<span class="token punctuation">;</span>
		<span class="token property">border-bottom-right-radius</span><span class="token punctuation">:</span> 0.55em<span class="token punctuation">;</span>
		<span class="token property">font-size</span><span class="token punctuation">:</span> 75%<span class="token punctuation">;</span>
		<span class="token property">padding</span><span class="token punctuation">:</span> 0.25em 0.5em<span class="token punctuation">;</span>
		<span class="token property">transform-origin</span><span class="token punctuation">:</span> top<span class="token punctuation">;</span>
		<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>100%<span class="token punctuation">)</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>0<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token property">transition-property</span><span class="token punctuation">:</span> transform<span class="token punctuation">;</span>
		<span class="token property">transition-duration</span><span class="token punctuation">:</span> 0.75s<span class="token punctuation">;</span>
		<span class="token property">transition-timing-function</span><span class="token punctuation">:</span> ease-out<span class="token punctuation">;</span>
		<span class="token property">transition-delay</span><span class="token punctuation">:</span> 0.05s<span class="token punctuation">;</span>
		<span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token selector">.hint:empty</span><span class="token punctuation">&#123;</span>
		<span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token selector">input:focus + .title + .errorMessage + .hint</span><span class="token punctuation">&#123;</span>
		<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>100%<span class="token punctuation">)</span> <span class="token function">scaleY</span><span class="token punctuation">(</span>1<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token property">transition-property</span><span class="token punctuation">:</span> transform<span class="token punctuation">;</span>
		<span class="token property">transition-delay</span><span class="token punctuation">:</span> 0.25s<span class="token punctuation">;</span>
		<span class="token property">transition-duration</span><span class="token punctuation">:</span> 0.75<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token selector">.errorMessage</span><span class="token punctuation">&#123;</span>
		<span class="token property">grid-column</span><span class="token punctuation">:</span> 4<span class="token punctuation">;</span>
		<span class="token property">grid-row</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>
		<span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>-60%<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token property">background-color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span>
		<span class="token property">border-radius</span><span class="token punctuation">:</span> 0.5em<span class="token punctuation">;</span>
		<span class="token property">padding</span><span class="token punctuation">:</span> 0.5em<span class="token punctuation">;</span>
		<span class="token property">padding-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
		<span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
		<span class="token property">font-size</span><span class="token punctuation">:</span> 75%<span class="token punctuation">;</span>
		<span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>
		<span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
		<span class="token property">scrollbar-width</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token selector">.errorMessage:empty</span><span class="token punctuation">&#123;</span>
		<span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
	<span class="token punctuation">&#125;</span>
	
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`,Sn;return xt=new _n({props:{title:"The title",errorMessage:"The error message",hint:"The hint"}}),a=new _n({props:{title:"Username",type:"text",errorMessage:"The entered username is too long!",hint:"3-25 characters. a-z and A-Z."}}),xe=new _n({props:{title:"Email",type:"email",errorMessage:"",hint:"Optional. If you provide an email and later forget your password, we can send you an email to let you choose a new password."}}),$e=new _n({props:{title:"Password",type:"password",errorMessage:"",hint:"At least 6 characters. "}}),oe=new _n({props:{title:"Password (re-enter)",type:"text",errorMessage:"This password does not match the one you entered before.",hint:"Enter the same password as you entered before."}}),{c(){h=o("p"),h.innerHTML=v,f=p(),k=o("p"),k.textContent=M,w=p(),x=o("h2"),x.textContent=I,y=p(),b=o("p"),b.textContent=L,C=p(),_=o("ul"),_.innerHTML=ft,P=p(),z=o("h2"),z.textContent=Nt,O=p(),F=o("p"),F.innerHTML=wt,Y=p(),V=o("pre"),K=new ie(!1),W=p(),J=o("p"),J.innerHTML=Gt,E=p(),G=o("pre"),Lt=new ie(!1),ut=p(),D=o("pre"),Q=new ie(!1),Z=p(),A=o("p"),A.innerHTML=U,Pt=p(),N=o("p"),N.innerHTML=vt,X=p(),tt=o("ol"),tt.innerHTML=et,nt=p(),st=o("p"),st.textContent=m,g=p(),St=o("pre"),at=new ie(!1),Se=p(),ot=o("p"),ot.innerHTML=ce,ke=p(),lt=o("pre"),Ut=new ie(!1),qt=p(),yt=o("p"),yt.textContent=Ee,Et=p(),gt=o("ul"),gt.innerHTML=Ae,At=p(),bt=o("pre"),fe=new ie(!1),Yt=p(),Kt=o("p"),Kt.innerHTML=Jt,Qt=p(),Zt=o("p"),Zt.textContent=Xt,te=p(),ee=o("h2"),ee.textContent=ne,se=p(),jt=o("p"),jt.innerHTML=zt,we=p(),pt=o("p"),pt.textContent=he,ve=p(),B=o("div"),cn(xt.$$.fragment),ye=p(),R=o("div"),R.innerHTML=me,ge=p(),it=o("p"),it.textContent=de,be=p(),rt=o("h3"),rt.textContent=ae,Je=p(),Bt=o("p"),Bt.textContent=Ct,je=p(),Rt=o("p"),Rt.textContent=ct,ze=p(),Ft=o("h3"),Ft.textContent=_t,Be=p(),Vt=o("p"),Vt.textContent=ht,Re=p(),Ot=o("p"),Ot.textContent=Tt,Fe=p(),Wt=o("h3"),Wt.textContent=mt,Ve=p(),$t=o("p"),$t.innerHTML=Ht,Oe=p(),Dt=o("p"),Dt.textContent=dt,We=p(),S=o("div"),cn(a.$$.fragment),d=p(),cn(xe.$$.fragment),Ce=p(),cn($e.$$.fragment),Xe=p(),cn(oe.$$.fragment),en=p(),_e=o("p"),_e.textContent=qe,nn=p(),Te=o("pre"),He=new ie(!1),Qe=p(),le=o("p"),le.textContent=sn,wn=p(),Me=o("ol"),Me.innerHTML=De,an=p(),Le=o("p"),Le.textContent=Ne,on=p(),Ie=o("p"),Ie.textContent=ln,Ze=p(),pe=o("ol"),pe.innerHTML=bn,s=p(),u=o("p"),u.textContent=xn,pn=p(),Ge=o("h2"),Ge.textContent=Cn,rn=p(),Ue=o("p"),Ue.innerHTML=qn,In=p(),un=o("pre"),Pn=new ie(!1),this.h()},l(n){h=l(n,"P",{"data-svelte-h":!0}),r(h)!=="svelte-y8ckg0"&&(h.innerHTML=v),f=i(n),k=l(n,"P",{"data-svelte-h":!0}),r(k)!=="svelte-fjp4uj"&&(k.textContent=M),w=i(n),x=l(n,"H2",{"data-svelte-h":!0}),r(x)!=="svelte-gina16"&&(x.textContent=I),y=i(n),b=l(n,"P",{"data-svelte-h":!0}),r(b)!=="svelte-614nzo"&&(b.textContent=L),C=i(n),_=l(n,"UL",{"data-svelte-h":!0}),r(_)!=="svelte-1wgq3kl"&&(_.innerHTML=ft),P=i(n),z=l(n,"H2",{"data-svelte-h":!0}),r(z)!=="svelte-q8k5nn"&&(z.textContent=Nt),O=i(n),F=l(n,"P",{"data-svelte-h":!0}),r(F)!=="svelte-1oa6s7u"&&(F.innerHTML=wt),Y=i(n),V=l(n,"PRE",{class:!0});var c=j(V);K=re(c,!1),c.forEach(t),W=i(n),J=l(n,"P",{"data-svelte-h":!0}),r(J)!=="svelte-mjer1v"&&(J.innerHTML=Gt),E=i(n),G=l(n,"PRE",{class:!0});var En=j(G);Lt=re(En,!1),En.forEach(t),ut=i(n),D=l(n,"PRE",{class:!0});var An=j(D);Q=re(An,!1),An.forEach(t),Z=i(n),A=l(n,"P",{"data-svelte-h":!0}),r(A)!=="svelte-tgasrm"&&(A.innerHTML=U),Pt=i(n),N=l(n,"P",{"data-svelte-h":!0}),r(N)!=="svelte-gayep1"&&(N.innerHTML=vt),X=i(n),tt=l(n,"OL",{"data-svelte-h":!0}),r(tt)!=="svelte-16u856i"&&(tt.innerHTML=et),nt=i(n),st=l(n,"P",{"data-svelte-h":!0}),r(st)!=="svelte-144ykyq"&&(st.textContent=m),g=i(n),St=l(n,"PRE",{class:!0});var jn=j(St);at=re(jn,!1),jn.forEach(t),Se=i(n),ot=l(n,"P",{"data-svelte-h":!0}),r(ot)!=="svelte-q3ln49"&&(ot.innerHTML=ce),ke=i(n),lt=l(n,"PRE",{class:!0});var zn=j(lt);Ut=re(zn,!1),zn.forEach(t),qt=i(n),yt=l(n,"P",{"data-svelte-h":!0}),r(yt)!=="svelte-11fytl9"&&(yt.textContent=Ee),Et=i(n),gt=l(n,"UL",{"data-svelte-h":!0}),r(gt)!=="svelte-1ke22vy"&&(gt.innerHTML=Ae),At=i(n),bt=l(n,"PRE",{class:!0});var Bn=j(bt);fe=re(Bn,!1),Bn.forEach(t),Yt=i(n),Kt=l(n,"P",{"data-svelte-h":!0}),r(Kt)!=="svelte-1aohgq"&&(Kt.innerHTML=Jt),Qt=i(n),Zt=l(n,"P",{"data-svelte-h":!0}),r(Zt)!=="svelte-w2e5xv"&&(Zt.textContent=Xt),te=i(n),ee=l(n,"H2",{"data-svelte-h":!0}),r(ee)!=="svelte-nh3x72"&&(ee.textContent=ne),se=i(n),jt=l(n,"P",{"data-svelte-h":!0}),r(jt)!=="svelte-1s2ew62"&&(jt.innerHTML=zt),we=i(n),pt=l(n,"P",{"data-svelte-h":!0}),r(pt)!=="svelte-m1pj4n"&&(pt.textContent=he),ve=i(n),B=l(n,"DIV",{style:!0});var Rn=j(B);hn(xt.$$.fragment,Rn),Rn.forEach(t),ye=i(n),R=l(n,"DIV",{style:!0,"data-svelte-h":!0}),r(R)!=="svelte-4h1xd7"&&(R.innerHTML=me),ge=i(n),it=l(n,"P",{"data-svelte-h":!0}),r(it)!=="svelte-fv2vmi"&&(it.textContent=de),be=i(n),rt=l(n,"H3",{"data-svelte-h":!0}),r(rt)!=="svelte-1yj5pvy"&&(rt.textContent=ae),Je=i(n),Bt=l(n,"P",{"data-svelte-h":!0}),r(Bt)!=="svelte-lwlnpl"&&(Bt.textContent=Ct),je=i(n),Rt=l(n,"P",{"data-svelte-h":!0}),r(Rt)!=="svelte-dx3sj6"&&(Rt.textContent=ct),ze=i(n),Ft=l(n,"H3",{"data-svelte-h":!0}),r(Ft)!=="svelte-1iyusyd"&&(Ft.textContent=_t),Be=i(n),Vt=l(n,"P",{"data-svelte-h":!0}),r(Vt)!=="svelte-lza5e9"&&(Vt.textContent=ht),Re=i(n),Ot=l(n,"P",{"data-svelte-h":!0}),r(Ot)!=="svelte-121xj78"&&(Ot.textContent=Tt),Fe=i(n),Wt=l(n,"H3",{"data-svelte-h":!0}),r(Wt)!=="svelte-12ouwk8"&&(Wt.textContent=mt),Ve=i(n),$t=l(n,"P",{"data-svelte-h":!0}),r($t)!=="svelte-1jbtwxt"&&($t.innerHTML=Ht),Oe=i(n),Dt=l(n,"P",{"data-svelte-h":!0}),r(Dt)!=="svelte-155fs85"&&(Dt.textContent=dt),We=i(n),S=l(n,"DIV",{style:!0});var tn=j(S);hn(a.$$.fragment,tn),d=i(tn),hn(xe.$$.fragment,tn),Ce=i(tn),hn($e.$$.fragment,tn),Xe=i(tn),hn(oe.$$.fragment,tn),tn.forEach(t),en=i(n),_e=l(n,"P",{"data-svelte-h":!0}),r(_e)!=="svelte-4non97"&&(_e.textContent=qe),nn=i(n),Te=l(n,"PRE",{class:!0});var Fn=j(Te);He=re(Fn,!1),Fn.forEach(t),Qe=i(n),le=l(n,"P",{"data-svelte-h":!0}),r(le)!=="svelte-1n2kdr8"&&(le.textContent=sn),wn=i(n),Me=l(n,"OL",{"data-svelte-h":!0}),r(Me)!=="svelte-btni5"&&(Me.innerHTML=De),an=i(n),Le=l(n,"P",{"data-svelte-h":!0}),r(Le)!=="svelte-1mk8y6h"&&(Le.textContent=Ne),on=i(n),Ie=l(n,"P",{"data-svelte-h":!0}),r(Ie)!=="svelte-v0j8ey"&&(Ie.textContent=ln),Ze=i(n),pe=l(n,"OL",{"data-svelte-h":!0}),r(pe)!=="svelte-14w941"&&(pe.innerHTML=bn),s=i(n),u=l(n,"P",{"data-svelte-h":!0}),r(u)!=="svelte-pp5wiz"&&(u.textContent=xn),pn=i(n),Ge=l(n,"H2",{"data-svelte-h":!0}),r(Ge)!=="svelte-1gy5kqs"&&(Ge.textContent=Cn),rn=i(n),Ue=l(n,"P",{"data-svelte-h":!0}),r(Ue)!=="svelte-1vfhbhx"&&(Ue.innerHTML=qn),In=i(n),un=l(n,"PRE",{class:!0});var Vn=j(un);Pn=re(Vn,!1),Vn.forEach(t),this.h()},h(){K.a=null,H(V,"class","language-html"),Lt.a=null,H(G,"class","language-html"),Q.a=null,H(D,"class","language-html"),at.a=null,H(St,"class","language-html"),Ut.a=null,H(lt,"class","language-html"),fe.a=null,H(bt,"class","language-html"),q(B,"padding","1em"),q(B,"background-color","white"),q(B,"resize","both"),q(B,"overflow","auto"),q(B,"margin","1em"),q(R,"font-size","90%"),q(R,"max-width","80%"),q(R,"margin-left","auto"),q(R,"margin-right","auto"),q(S,"padding","1em"),q(S,"background-color","white"),q(S,"resize","both"),q(S,"overflow","auto"),q(S,"margin","1em"),He.a=null,H(Te,"class","language-html"),Pn.a=null,H(un,"class","language-html")},m(n,c){e(n,h,c),e(n,f,c),e(n,k,c),e(n,w,c),e(n,x,c),e(n,y,c),e(n,b,c),e(n,C,c),e(n,_,c),e(n,P,c),e(n,z,c),e(n,O,c),e(n,F,c),e(n,Y,c),e(n,V,c),K.m(Mt,V),e(n,W,c),e(n,J,c),e(n,E,c),e(n,G,c),Lt.m($,G),e(n,ut,c),e(n,D,c),Q.m(It,D),e(n,Z,c),e(n,A,c),e(n,Pt,c),e(n,N,c),e(n,X,c),e(n,tt,c),e(n,nt,c),e(n,st,c),e(n,g,c),e(n,St,c),at.m(Ye,St),e(n,Se,c),e(n,ot,c),e(n,ke,c),e(n,lt,c),Ut.m(Ke,lt),e(n,qt,c),e(n,yt,c),e(n,Et,c),e(n,gt,c),e(n,At,c),e(n,bt,c),fe.m(ue,bt),e(n,Yt,c),e(n,Kt,c),e(n,Qt,c),e(n,Zt,c),e(n,te,c),e(n,ee,c),e(n,se,c),e(n,jt,c),e(n,we,c),e(n,pt,c),e(n,ve,c),e(n,B,c),mn(xt,B,null),e(n,ye,c),e(n,R,c),e(n,ge,c),e(n,it,c),e(n,be,c),e(n,rt,c),e(n,Je,c),e(n,Bt,c),e(n,je,c),e(n,Rt,c),e(n,ze,c),e(n,Ft,c),e(n,Be,c),e(n,Vt,c),e(n,Re,c),e(n,Ot,c),e(n,Fe,c),e(n,Wt,c),e(n,Ve,c),e(n,$t,c),e(n,Oe,c),e(n,Dt,c),e(n,We,c),e(n,S,c),mn(a,S,null),kt(S,d),mn(xe,S,null),kt(S,Ce),mn($e,S,null),kt(S,Xe),mn(oe,S,null),e(n,en,c),e(n,_e,c),e(n,nn,c),e(n,Te,c),He.m(Ln,Te),e(n,Qe,c),e(n,le,c),e(n,wn,c),e(n,Me,c),e(n,an,c),e(n,Le,c),e(n,on,c),e(n,Ie,c),e(n,Ze,c),e(n,pe,c),e(n,s,c),e(n,u,c),e(n,pn,c),e(n,Ge,c),e(n,rn,c),e(n,Ue,c),e(n,In,c),e(n,un,c),Pn.m(Un,un),Sn=!0},p:Pe,i(n){Sn||(dn(xt.$$.fragment,n),dn(a.$$.fragment,n),dn(xe.$$.fragment,n),dn($e.$$.fragment,n),dn(oe.$$.fragment,n),Sn=!0)},o(n){kn(xt.$$.fragment,n),kn(a.$$.fragment,n),kn(xe.$$.fragment,n),kn($e.$$.fragment,n),kn(oe.$$.fragment,n),Sn=!1},d(n){n&&(t(h),t(f),t(k),t(w),t(x),t(y),t(b),t(C),t(_),t(P),t(z),t(O),t(F),t(Y),t(V),t(W),t(J),t(E),t(G),t(ut),t(D),t(Z),t(A),t(Pt),t(N),t(X),t(tt),t(nt),t(st),t(g),t(St),t(Se),t(ot),t(ke),t(lt),t(qt),t(yt),t(Et),t(gt),t(At),t(bt),t(Yt),t(Kt),t(Qt),t(Zt),t(te),t(ee),t(se),t(jt),t(we),t(pt),t(ve),t(B),t(ye),t(R),t(ge),t(it),t(be),t(rt),t(Je),t(Bt),t(je),t(Rt),t(ze),t(Ft),t(Be),t(Vt),t(Re),t(Ot),t(Fe),t(Wt),t(Ve),t($t),t(Oe),t(Dt),t(We),t(S),t(en),t(_e),t(nn),t(Te),t(Qe),t(le),t(wn),t(Me),t(an),t(Le),t(on),t(Ie),t(Ze),t(pe),t(s),t(u),t(pn),t(Ge),t(rn),t(Ue),t(In),t(un)),fn(xt),fn(a),fn(xe),fn($e),fn(oe)}}}let ns=class extends yn{constructor(h){super(),gn(this,h,null,es,vn,{})}};function ss(T){let h,v="More and more people have lately started to share their thoughts that AI will ruin/kill the web. They imagine a future where the web is flooded with fake accounts, fake news, etc., and where you can't trust anything you read online. I think they have got all this wrong.",f,k,M,w,x="The first thing they got wrong is that they think this will happen in the future. Big news: it has already happened! Fake accounts have existed for as long as I can remember. Fake news/incorrect info as well. Way long before AI became as good as it is today, bad people created these bad things. So the web is already full of accounts and content with the intention to trick you.",I,y,b='As an example, a popular thing to fake are reviews. Companies of course want good reviews to get people&#39;s trust, so we buy their products, and the easiest and cheapest way to get our trust is by creating fake accounts and post good reviews. <a href="https://www.svt.se/nyheter/inrikes/sandra-anstalldes-pa-rive-juridiska-byra-for-att-jobba-med-fejkrecensioner" rel="nofollow" target="_blank">Here&#39;s a good example of that (in Swedish)</a>.',L,C,_="So, if you try to understand if a company is good or bad by looking at reviews people have written about the company, it's often more interesting to look at the bad reviews a company has got, since they can be more likely to come from non-faked accounts. However, it should also be noted that competing companies can post faked bad reviews for the other companies to make it look like the other companies are bad, so for this reason, you can't really trust the bad reviews either. So, in short, there are no reviews you can trust! (except the ones coming from people you know and trust)",ft,P,z="So, it is not a new problem that you can't trust something posted by someone you don't know. If you have done that, you should probably stop doing that as soon as possible.",Nt,O,F,wt,Y="<em>But with better and better AI, the web will contain more and more faked content, and it will be harder and harder to know what is faked and what is real. This surely must mean the web will become a worse place, right?</em> Well, in my opinion, that conclusion is the second thing they&#39;ve got wrong.",V,K,Mt="Imagine it's a hot summer day, and you want to go to the lake and swim to cool down. But in the lake there are alligators. Not many, only a few. And usually they leave humans alone. The probability they will actually attack and kill you while you're swimming there is only 0.001%, or so. Not that bad, right? So you think it's worth the risk of getting eaten to cool down this hot summer day. So you go there, and you swim, and... You didn't get eaten! Nothing bad happened! Why? Because there were so few alligators there, so it was very unlikely they would eat you this time.",W,J,Gt="But the next year, there are many more alligators in the lake, and it's a 99% probability they'll eat you if you swim there. Will you attempt to swim there this time, even though you badly want to cool down? No, of course not (assuming you don't want to die ^^).",E,G,Lt="This is very similar to fake content on the web. Currently, there is not enough fake content on the web, so many blindly trust information they get from unknown sources. The information they get is correct enough often for them to be willing to gamble on it's being correct, instead of doing the extra work that is required to verify that it is correct (which sometimes is impossible). But with better AIs that spreads better fake content, we will finally get to that state where people stop trusting content from unknown sources, because too often it's incorrect.",$,ut,D,Q,It="Does this mean that we will stop using the web? No, of course not, because we love using the web! It will simply mean that we will start appreciating and value verified content much more than what we have done before. So knowing <em>who</em> that actually produced the content will finally become important to us.",Z,A,U='I imagine this in practice very much can work through a <a href="https://en.wikipedia.org/wiki/Chain_of_trust" rel="nofollow" target="_blank">chain of trust</a>, similar to how the distribution of public encryption keys often are verified using certificates. In short, you keep track of which your real physical friends are that you trust, and they in turn keep track of which their real physical friends are that they trust, and so on. If some content is produced by your friend, then you know that that content for sure is true, because you trust your friend. And if one of their friends has published some content, then you probably trust that content as well, because you trust that your friend will only trust good people. And so on.',Pt,N,vt='Obviously, the longer the chain gets, the more likely it is that the content can&#39;t be trusted (because a bad guy has managed to get the trust of someone somewhere), but according to the <a href="https://en.wikipedia.org/wiki/Small-world_experiment" rel="nofollow" target="_blank">Small-world experiment</a>, that chain is probably much shorter than you think. For example, if considering only the people in USA, that chain is usually no longer than 4 people!',X,tt,et,nt,st="I look forward to using such a web 🙂 But before we are there, there are reasons for being worried. The chain of trust is only useful for those using it. People that don't use it, and instead blindly trust unknown sources, are receptive to being fooled. And, unfortunately, it's in my experience usually these people, who are willing to trust unknown sources, that often are willing to believe the craziest conspiracy theories in our world, and are most receptive to believe in fake news. This makes it easy for, for example, the Russian state to keep spreading their false propaganda. Our best protection against that is to make sure that all of us are educated well and taught critical thinking, so we don't blindly trust anything we read.";return{c(){h=o("p"),h.textContent=v,f=p(),k=o("hr"),M=p(),w=o("p"),w.textContent=x,I=p(),y=o("p"),y.innerHTML=b,L=p(),C=o("p"),C.textContent=_,ft=p(),P=o("p"),P.textContent=z,Nt=p(),O=o("hr"),F=p(),wt=o("p"),wt.innerHTML=Y,V=p(),K=o("p"),K.textContent=Mt,W=p(),J=o("p"),J.textContent=Gt,E=p(),G=o("p"),G.textContent=Lt,$=p(),ut=o("hr"),D=p(),Q=o("p"),Q.innerHTML=It,Z=p(),A=o("p"),A.innerHTML=U,Pt=p(),N=o("p"),N.innerHTML=vt,X=p(),tt=o("hr"),et=p(),nt=o("p"),nt.textContent=st},l(m){h=l(m,"P",{"data-svelte-h":!0}),r(h)!=="svelte-1dfb0dq"&&(h.textContent=v),f=i(m),k=l(m,"HR",{}),M=i(m),w=l(m,"P",{"data-svelte-h":!0}),r(w)!=="svelte-s823jo"&&(w.textContent=x),I=i(m),y=l(m,"P",{"data-svelte-h":!0}),r(y)!=="svelte-c7fliq"&&(y.innerHTML=b),L=i(m),C=l(m,"P",{"data-svelte-h":!0}),r(C)!=="svelte-1q5y5cm"&&(C.textContent=_),ft=i(m),P=l(m,"P",{"data-svelte-h":!0}),r(P)!=="svelte-9cefed"&&(P.textContent=z),Nt=i(m),O=l(m,"HR",{}),F=i(m),wt=l(m,"P",{"data-svelte-h":!0}),r(wt)!=="svelte-iso2fz"&&(wt.innerHTML=Y),V=i(m),K=l(m,"P",{"data-svelte-h":!0}),r(K)!=="svelte-1742nm4"&&(K.textContent=Mt),W=i(m),J=l(m,"P",{"data-svelte-h":!0}),r(J)!=="svelte-9456dz"&&(J.textContent=Gt),E=i(m),G=l(m,"P",{"data-svelte-h":!0}),r(G)!=="svelte-1j94t33"&&(G.textContent=Lt),$=i(m),ut=l(m,"HR",{}),D=i(m),Q=l(m,"P",{"data-svelte-h":!0}),r(Q)!=="svelte-10ocxj5"&&(Q.innerHTML=It),Z=i(m),A=l(m,"P",{"data-svelte-h":!0}),r(A)!=="svelte-18kosue"&&(A.innerHTML=U),Pt=i(m),N=l(m,"P",{"data-svelte-h":!0}),r(N)!=="svelte-1rmbl8y"&&(N.innerHTML=vt),X=i(m),tt=l(m,"HR",{}),et=i(m),nt=l(m,"P",{"data-svelte-h":!0}),r(nt)!=="svelte-szompm"&&(nt.textContent=st)},m(m,g){e(m,h,g),e(m,f,g),e(m,k,g),e(m,M,g),e(m,w,g),e(m,I,g),e(m,y,g),e(m,L,g),e(m,C,g),e(m,ft,g),e(m,P,g),e(m,Nt,g),e(m,O,g),e(m,F,g),e(m,wt,g),e(m,V,g),e(m,K,g),e(m,W,g),e(m,J,g),e(m,E,g),e(m,G,g),e(m,$,g),e(m,ut,g),e(m,D,g),e(m,Q,g),e(m,Z,g),e(m,A,g),e(m,Pt,g),e(m,N,g),e(m,X,g),e(m,tt,g),e(m,et,g),e(m,nt,g)},p:Pe,i:Pe,o:Pe,d(m){m&&(t(h),t(f),t(k),t(M),t(w),t(I),t(y),t(L),t(C),t(ft),t(P),t(Nt),t(O),t(F),t(wt),t(V),t(K),t(W),t(J),t(E),t(G),t($),t(ut),t(D),t(Q),t(Z),t(A),t(Pt),t(N),t(X),t(tt),t(et),t(nt))}}}let as=class extends yn{constructor(h){super(),gn(this,h,null,ss,vn,{})}};function os(T){let h,v='I started my career as a programming teacher. During the first years, I helped out in courses covering functional programming in Lisp (the dialects <a href="https://lisp-lang.org/" rel="nofollow" target="_blank">Common Lisp</a> and <a href="https://racket-lang.org/" rel="nofollow" target="_blank">Racket</a>). Later, I taught courses where imperative programming instead was used in JavaScript (<a href="https://262.ecma-international.org/14.0/" rel="nofollow" target="_blank">ECMAScript</a>), <a href="https://learn.microsoft.com/en-us/dotnet/csharp/" rel="nofollow" target="_blank">C#</a> and <a href="https://www.python.org/" rel="nofollow" target="_blank">Python</a>.',f,k,M="So, I've been teaching both functional programming and imperative programming. Which one is easier to teach, and why? Let me share my experiences and opinions.",w,x,I,y,b="Let's start with functional programming. These courses were mostly focused on problem solving (algorithms), so my perspective here will be from that point of view.",L,C,_="When a student faces a problem and asks for help with getting started, it's usually (always?) very easy to explain to the student how they should think:",ft,P,z="<ol><li><p>Find an instance of the problem that is so easy to solve that you can directly send back a value</p></li> <li><p>If the problem is not that easy to solve, try to make the problem smaller somehow, such as by:</p> <ul><li>Removing a value from a list, or</li> <li>Decrement a number by one,</li> <li>Etc.</li></ul> <p>Then use recursion to solve that smaller problem, and use induction (i.e. assume the recursive call successfully returns the correct value), and then somehow modify that value to compute the solution to the entire problem.</p></li></ol>",Nt,O,F="As an example, let's say we should implement a function that summarizes the numbers in a list/array.",wt,Y,V="The instance of the problem that is so easy to solve is when the list is empty, because then the sum of the numbers is simply <code>0</code>:",K,Mt,W,J=`<code class="language-js"><span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token parameter">numbers</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	
	<span class="token comment">// Handle the simplest problem instance.</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token number">0</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token comment">// TODO: Handle the other problem instances.</span>
	
<span class="token punctuation">&#125;</span></code>`,Gt,E,G="If the problem instance is harder to solve, then we make it smaller by removing the first number from the list, and we use recursion to compute the sum of the rest of the numbers, and then we just need to add the first number to that sum:",Lt,$,ut,D=`<code class="language-js"><span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token parameter">numbers</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	
	<span class="token comment">// Handle the simplest problem instance.</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		<span class="token keyword">return</span> <span class="token number">0</span>
	<span class="token punctuation">&#125;</span>
	
	<span class="token comment">// Handle the other problem instances.</span>
	<span class="token keyword">return</span> numbers<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">getSum</span><span class="token punctuation">(</span>numbers<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	
<span class="token punctuation">&#125;</span></code>`,Q,It,Z='It&#39;s also very easy to visualize how the computer computes this using the <a href="https://sicp.sourceacademy.org/chapters/1.1.5.html" rel="nofollow" target="_blank">Substitution Model</a>. For example, if we want to compute <code>getSum([3, 2, 5])</code>:',A,U,Pt,N=`<code class="language-undefined">getSum([3, 2, 5]) --&gt;
3 + getSum([2, 5]) --&gt;
3 + 2 + getSum([5]) --&gt;
3 + 2 + 5 + getSum([]) --&gt;
3 + 2 + 5 + 0 --&gt;
10</code>`,vt,X,tt="In short, functional programming is easy to teach, and easy to explain how it works.",et,nt,st,m,g="Now, let us compare that with imperative programming. The same function implemented with a loop in imperative programming looks like this:",St,at,Ye,Se=`<code class="language-js"><span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token parameter">numbers</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	
	<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>
	
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> number <span class="token keyword">of</span> numbers<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		sum <span class="token operator">+=</span> number
	<span class="token punctuation">&#125;</span>
	
	<span class="token keyword">return</span> sum
	
<span class="token punctuation">&#125;</span></code>`,ot,ce,ke='In this implementation, we have not split the problem into a simple case and a harder case ("the recursive case"). Instead, we try to handle both cases at the same time, and the same way. And for beginners at programming, I believe that this makes the solution much harder to understand, both how it works and how to come up with.',lt,Ut,Ke="As a teacher, how should I be able to help a student to come up with the first line of code (<code>let sum = 0</code>) on their own? The best I can say is something like:",qt,yt,Ee="<p>The function should return a number, so your result variable should be a number.</p>",Et,gt,Ae="But then the student might ask:",At,bt,fe="<p>How do I know that I need a result variable?</p>",ue,Yt,Kt="And that&#39;s a very good question. The reason I know that is because (from my own experience), I know this implementation will next require a loop to iterate over all the numbers and add them to the <code>sum</code> variable. But the student who doesn&#39;t have any programming experience yet won&#39;t know that.",Jt,Qt,Zt="So, for a student to be able to write the first line of code, they must already have realized that a loop should come next. So the student basically has to solve the entire problem before they can write the first line of code in the function. This makes it much harder to get started with writing imperative code compared to functional code, where you instead split the implementation of a function into different cases that can be implemented independently of each other.",Xt,te,ee='So, in imperative programming, it&#39;s often not enough to just teach about variables and loops, and then expect the students to be able to implement the <code>getSum(numbers)</code> function. Instead, it&#39;s important to also teach the <a href="https://runestone.academy/ns/books/published/thinkcspy/Functions/TheAccumulatorPattern.html" rel="nofollow" target="_blank">Accumulator Pattern</a>, since the loop often must be used with a result variable:',ne,se,jt,zt=`<code class="language-js"><span class="token keyword">let</span> resultVariable <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">An initial value of some kind</span><span class="token template-punctuation string">&#96;</span></span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> value <span class="token keyword">of</span> values<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	resultVariable <span class="token operator">=</span> <span class="token function">computeNewValue</span><span class="token punctuation">(</span>resultVariable<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`,we,pt,he="And for students having to learn also this pattern makes it so much harder for them to get started.",ve,B,xt="But, let us also dive deeper into explaining how the code works. In functional programming, we hade the substitution model. Easy to learn, easy to explain, and easy to visualize.",ye,R,me="What's the corresponding thing we have in imperative programming? I think that would be the variable table, and then step-by-step execution of our statements and expressions.",ge,it,de="Here's the imperative implementation again:",be,rt,ae,Je=`<code class="language-js"><span class="token keyword">function</span> <span class="token function">getSum</span><span class="token punctuation">(</span><span class="token parameter">numbers</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
	
	<span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span>
	
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">const</span> number <span class="token keyword">of</span> numbers<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
		sum <span class="token operator">+=</span> number
	<span class="token punctuation">&#125;</span>
	
	<span class="token keyword">return</span> sum
	
<span class="token punctuation">&#125;</span></code>`,Bt,Ct,je="Let&#39;s say we want to compute <code>getSum([3, 2, 5])</code>. In the function, our variable table will first contain the <code>numbers</code> variable (parameter):",Rt,ct,ze="<thead><tr><th>Variable</th><th>Value</th></tr></thead> <tbody><tr><td>numbers</td><td>[3, 2, 5]</td></tr></tbody>",Ft,_t,Be="Then we execute <code>let sum = 0</code>, and a new entry is added to our variable table:",Vt,ht,Re="<thead><tr><th>Variable</th><th>Value</th></tr></thead> <tbody><tr><td>numbers</td><td>[3, 2, 5]</td></tr> <tr><td>sum</td><td>0</td></tr></tbody>",Ot,Tt,Fe="Then we get to the loop, and a new variable is added to our variable table:",Wt,mt,Ve="<thead><tr><th>Variable</th><th>Value</th></tr></thead> <tbody><tr><td>numbers</td><td>[3, 2, 5]</td></tr> <tr><td>sum</td><td>0</td></tr> <tr><td>number</td><td>3</td></tr></tbody>",$t,Ht,Oe="Then we execute <code>sum += number</code>, and we need to update our variable table:",Dt,dt,We="<thead><tr><th>Variable</th><th>Value</th></tr></thead> <tbody><tr><td>numbers</td><td>[3, 2, 5]</td></tr> <tr><td>sum</td><td><s>0</s> 3</td></tr> <tr><td>number</td><td>3</td></tr></tbody>",S,a,d="Then we start next iteration in the loop, and we store the next number in the <code>number</code> variable:",xe,Ce,$e="<thead><tr><th>Variable</th><th>Value</th></tr></thead> <tbody><tr><td>numbers</td><td>[3, 2, 5]</td></tr> <tr><td>sum</td><td><s>0</s> 3</td></tr> <tr><td>number</td><td><s>3</s> 2</td></tr></tbody>",Xe,oe,en="Then we execute <code>sum += number</code> again, and we need to update our variable table:",_e,qe,nn="<thead><tr><th>Variable</th><th>Value</th></tr></thead> <tbody><tr><td>numbers</td><td>[3, 2, 5]</td></tr> <tr><td>sum</td><td><s>0</s> <s>3</s> 5</td></tr> <tr><td>number</td><td><s>3</s> 2</td></tr></tbody>",Te,He,Ln="Etc. You do see how incredibly much more complicated it is to explain how imperative programming works, right? For functional programming with the substitution model, it is very easy and elegant:",Qe,le,sn,wn=`<code class="language-undefined">getSum([3, 2, 5]) --&gt;
3 + getSum([2, 5]) --&gt;
3 + 2 + getSum([5]) --&gt;
3 + 2 + 5 + getSum([]) --&gt;
3 + 2 + 5 + 0 --&gt;
10</code>`,Me,De,an="For imperative programming, we needed a variable table to keep track of the state of the program as we execute the statements in the program, and we also needed to keep track of which statement that is next to be executed. It's so much to keep track of!",Le,Ne,on="And imagine you're a student at a lecture taking notes on this, and then look back on your notes. You can see that some variables in the table have been assigned new values sometimes, but it's not obvious when, nor why. In the substitution model, you have all info there, and it is so much easier to write.",Ie,ln,Ze,pe,bn="So, my conclusions/opinions? I think functional programming is much easier to teach for teachers, and much easier to learn for students. But the industry is still largely using imperative programming, so it might still be favorable for beginners at programming to focus on learning imperative programming.";return{c(){h=o("p"),h.innerHTML=v,f=p(),k=o("p"),k.textContent=M,w=p(),x=o("hr"),I=p(),y=o("p"),y.textContent=b,L=p(),C=o("p"),C.textContent=_,ft=p(),P=o("blockquote"),P.innerHTML=z,Nt=p(),O=o("p"),O.textContent=F,wt=p(),Y=o("p"),Y.innerHTML=V,K=p(),Mt=o("pre"),W=new ie(!1),Gt=p(),E=o("p"),E.textContent=G,Lt=p(),$=o("pre"),ut=new ie(!1),Q=p(),It=o("p"),It.innerHTML=Z,A=p(),U=o("pre"),Pt=new ie(!1),vt=p(),X=o("p"),X.textContent=tt,et=p(),nt=o("hr"),st=p(),m=o("p"),m.textContent=g,St=p(),at=o("pre"),Ye=new ie(!1),ot=p(),ce=o("p"),ce.textContent=ke,lt=p(),Ut=o("p"),Ut.innerHTML=Ke,qt=p(),yt=o("blockquote"),yt.innerHTML=Ee,Et=p(),gt=o("p"),gt.textContent=Ae,At=p(),bt=o("blockquote"),bt.innerHTML=fe,ue=p(),Yt=o("p"),Yt.innerHTML=Kt,Jt=p(),Qt=o("p"),Qt.textContent=Zt,Xt=p(),te=o("p"),te.innerHTML=ee,ne=p(),se=o("pre"),jt=new ie(!1),we=p(),pt=o("p"),pt.textContent=he,ve=p(),B=o("p"),B.textContent=xt,ye=p(),R=o("p"),R.textContent=me,ge=p(),it=o("p"),it.textContent=de,be=p(),rt=o("pre"),ae=new ie(!1),Bt=p(),Ct=o("p"),Ct.innerHTML=je,Rt=p(),ct=o("table"),ct.innerHTML=ze,Ft=p(),_t=o("p"),_t.innerHTML=Be,Vt=p(),ht=o("table"),ht.innerHTML=Re,Ot=p(),Tt=o("p"),Tt.textContent=Fe,Wt=p(),mt=o("table"),mt.innerHTML=Ve,$t=p(),Ht=o("p"),Ht.innerHTML=Oe,Dt=p(),dt=o("table"),dt.innerHTML=We,S=p(),a=o("p"),a.innerHTML=d,xe=p(),Ce=o("table"),Ce.innerHTML=$e,Xe=p(),oe=o("p"),oe.innerHTML=en,_e=p(),qe=o("table"),qe.innerHTML=nn,Te=p(),He=o("p"),He.textContent=Ln,Qe=p(),le=o("pre"),sn=new ie(!1),Me=p(),De=o("p"),De.textContent=an,Le=p(),Ne=o("p"),Ne.textContent=on,Ie=p(),ln=o("hr"),Ze=p(),pe=o("p"),pe.textContent=bn,this.h()},l(s){h=l(s,"P",{"data-svelte-h":!0}),r(h)!=="svelte-bvsqs3"&&(h.innerHTML=v),f=i(s),k=l(s,"P",{"data-svelte-h":!0}),r(k)!=="svelte-hqzi24"&&(k.textContent=M),w=i(s),x=l(s,"HR",{}),I=i(s),y=l(s,"P",{"data-svelte-h":!0}),r(y)!=="svelte-1msnapb"&&(y.textContent=b),L=i(s),C=l(s,"P",{"data-svelte-h":!0}),r(C)!=="svelte-125gvir"&&(C.textContent=_),ft=i(s),P=l(s,"BLOCKQUOTE",{"data-svelte-h":!0}),r(P)!=="svelte-5ttqkp"&&(P.innerHTML=z),Nt=i(s),O=l(s,"P",{"data-svelte-h":!0}),r(O)!=="svelte-n3gk8e"&&(O.textContent=F),wt=i(s),Y=l(s,"P",{"data-svelte-h":!0}),r(Y)!=="svelte-46dq1w"&&(Y.innerHTML=V),K=i(s),Mt=l(s,"PRE",{class:!0});var u=j(Mt);W=re(u,!1),u.forEach(t),Gt=i(s),E=l(s,"P",{"data-svelte-h":!0}),r(E)!=="svelte-o9i08c"&&(E.textContent=G),Lt=i(s),$=l(s,"PRE",{class:!0});var xn=j($);ut=re(xn,!1),xn.forEach(t),Q=i(s),It=l(s,"P",{"data-svelte-h":!0}),r(It)!=="svelte-1m9ifnc"&&(It.innerHTML=Z),A=i(s),U=l(s,"PRE",{class:!0});var pn=j(U);Pt=re(pn,!1),pn.forEach(t),vt=i(s),X=l(s,"P",{"data-svelte-h":!0}),r(X)!=="svelte-1pkhf31"&&(X.textContent=tt),et=i(s),nt=l(s,"HR",{}),st=i(s),m=l(s,"P",{"data-svelte-h":!0}),r(m)!=="svelte-i36g0j"&&(m.textContent=g),St=i(s),at=l(s,"PRE",{class:!0});var Ge=j(at);Ye=re(Ge,!1),Ge.forEach(t),ot=i(s),ce=l(s,"P",{"data-svelte-h":!0}),r(ce)!=="svelte-1695ako"&&(ce.textContent=ke),lt=i(s),Ut=l(s,"P",{"data-svelte-h":!0}),r(Ut)!=="svelte-1d1yi24"&&(Ut.innerHTML=Ke),qt=i(s),yt=l(s,"BLOCKQUOTE",{"data-svelte-h":!0}),r(yt)!=="svelte-f50hbd"&&(yt.innerHTML=Ee),Et=i(s),gt=l(s,"P",{"data-svelte-h":!0}),r(gt)!=="svelte-1njv4w6"&&(gt.textContent=Ae),At=i(s),bt=l(s,"BLOCKQUOTE",{"data-svelte-h":!0}),r(bt)!=="svelte-1xzg175"&&(bt.innerHTML=fe),ue=i(s),Yt=l(s,"P",{"data-svelte-h":!0}),r(Yt)!=="svelte-rvfedk"&&(Yt.innerHTML=Kt),Jt=i(s),Qt=l(s,"P",{"data-svelte-h":!0}),r(Qt)!=="svelte-1a76sbn"&&(Qt.textContent=Zt),Xt=i(s),te=l(s,"P",{"data-svelte-h":!0}),r(te)!=="svelte-9z04hc"&&(te.innerHTML=ee),ne=i(s),se=l(s,"PRE",{class:!0});var Cn=j(se);jt=re(Cn,!1),Cn.forEach(t),we=i(s),pt=l(s,"P",{"data-svelte-h":!0}),r(pt)!=="svelte-1tijd8j"&&(pt.textContent=he),ve=i(s),B=l(s,"P",{"data-svelte-h":!0}),r(B)!=="svelte-e5qkba"&&(B.textContent=xt),ye=i(s),R=l(s,"P",{"data-svelte-h":!0}),r(R)!=="svelte-88k8eg"&&(R.textContent=me),ge=i(s),it=l(s,"P",{"data-svelte-h":!0}),r(it)!=="svelte-14p8u5n"&&(it.textContent=de),be=i(s),rt=l(s,"PRE",{class:!0});var rn=j(rt);ae=re(rn,!1),rn.forEach(t),Bt=i(s),Ct=l(s,"P",{"data-svelte-h":!0}),r(Ct)!=="svelte-1exaoyz"&&(Ct.innerHTML=je),Rt=i(s),ct=l(s,"TABLE",{border:!0,"data-svelte-h":!0}),r(ct)!=="svelte-1xqzeb0"&&(ct.innerHTML=ze),Ft=i(s),_t=l(s,"P",{"data-svelte-h":!0}),r(_t)!=="svelte-15uh26h"&&(_t.innerHTML=Be),Vt=i(s),ht=l(s,"TABLE",{border:!0,"data-svelte-h":!0}),r(ht)!=="svelte-134ebu4"&&(ht.innerHTML=Re),Ot=i(s),Tt=l(s,"P",{"data-svelte-h":!0}),r(Tt)!=="svelte-2repli"&&(Tt.textContent=Fe),Wt=i(s),mt=l(s,"TABLE",{border:!0,"data-svelte-h":!0}),r(mt)!=="svelte-18f24rx"&&(mt.innerHTML=Ve),$t=i(s),Ht=l(s,"P",{"data-svelte-h":!0}),r(Ht)!=="svelte-momrrq"&&(Ht.innerHTML=Oe),Dt=i(s),dt=l(s,"TABLE",{border:!0,"data-svelte-h":!0}),r(dt)!=="svelte-1wb5i2d"&&(dt.innerHTML=We),S=i(s),a=l(s,"P",{"data-svelte-h":!0}),r(a)!=="svelte-ajpvqc"&&(a.innerHTML=d),xe=i(s),Ce=l(s,"TABLE",{border:!0,"data-svelte-h":!0}),r(Ce)!=="svelte-1x9c7go"&&(Ce.innerHTML=$e),Xe=i(s),oe=l(s,"P",{"data-svelte-h":!0}),r(oe)!=="svelte-1w2dfme"&&(oe.innerHTML=en),_e=i(s),qe=l(s,"TABLE",{border:!0,"data-svelte-h":!0}),r(qe)!=="svelte-1tlsdb6"&&(qe.innerHTML=nn),Te=i(s),He=l(s,"P",{"data-svelte-h":!0}),r(He)!=="svelte-wlulby"&&(He.textContent=Ln),Qe=i(s),le=l(s,"PRE",{class:!0});var Ue=j(le);sn=re(Ue,!1),Ue.forEach(t),Me=i(s),De=l(s,"P",{"data-svelte-h":!0}),r(De)!=="svelte-a3pnj"&&(De.textContent=an),Le=i(s),Ne=l(s,"P",{"data-svelte-h":!0}),r(Ne)!=="svelte-1k39ria"&&(Ne.textContent=on),Ie=i(s),ln=l(s,"HR",{}),Ze=i(s),pe=l(s,"P",{"data-svelte-h":!0}),r(pe)!=="svelte-16m7ltm"&&(pe.textContent=bn),this.h()},h(){W.a=null,H(Mt,"class","language-js"),ut.a=null,H($,"class","language-js"),Pt.a=null,H(U,"class","language-undefined"),Ye.a=null,H(at,"class","language-js"),jt.a=null,H(se,"class","language-js"),ae.a=null,H(rt,"class","language-js"),H(ct,"border","1"),H(ht,"border","1"),H(mt,"border","1"),H(dt,"border","1"),H(Ce,"border","1"),H(qe,"border","1"),sn.a=null,H(le,"class","language-undefined")},m(s,u){e(s,h,u),e(s,f,u),e(s,k,u),e(s,w,u),e(s,x,u),e(s,I,u),e(s,y,u),e(s,L,u),e(s,C,u),e(s,ft,u),e(s,P,u),e(s,Nt,u),e(s,O,u),e(s,wt,u),e(s,Y,u),e(s,K,u),e(s,Mt,u),W.m(J,Mt),e(s,Gt,u),e(s,E,u),e(s,Lt,u),e(s,$,u),ut.m(D,$),e(s,Q,u),e(s,It,u),e(s,A,u),e(s,U,u),Pt.m(N,U),e(s,vt,u),e(s,X,u),e(s,et,u),e(s,nt,u),e(s,st,u),e(s,m,u),e(s,St,u),e(s,at,u),Ye.m(Se,at),e(s,ot,u),e(s,ce,u),e(s,lt,u),e(s,Ut,u),e(s,qt,u),e(s,yt,u),e(s,Et,u),e(s,gt,u),e(s,At,u),e(s,bt,u),e(s,ue,u),e(s,Yt,u),e(s,Jt,u),e(s,Qt,u),e(s,Xt,u),e(s,te,u),e(s,ne,u),e(s,se,u),jt.m(zt,se),e(s,we,u),e(s,pt,u),e(s,ve,u),e(s,B,u),e(s,ye,u),e(s,R,u),e(s,ge,u),e(s,it,u),e(s,be,u),e(s,rt,u),ae.m(Je,rt),e(s,Bt,u),e(s,Ct,u),e(s,Rt,u),e(s,ct,u),e(s,Ft,u),e(s,_t,u),e(s,Vt,u),e(s,ht,u),e(s,Ot,u),e(s,Tt,u),e(s,Wt,u),e(s,mt,u),e(s,$t,u),e(s,Ht,u),e(s,Dt,u),e(s,dt,u),e(s,S,u),e(s,a,u),e(s,xe,u),e(s,Ce,u),e(s,Xe,u),e(s,oe,u),e(s,_e,u),e(s,qe,u),e(s,Te,u),e(s,He,u),e(s,Qe,u),e(s,le,u),sn.m(wn,le),e(s,Me,u),e(s,De,u),e(s,Le,u),e(s,Ne,u),e(s,Ie,u),e(s,ln,u),e(s,Ze,u),e(s,pe,u)},p:Pe,i:Pe,o:Pe,d(s){s&&(t(h),t(f),t(k),t(w),t(x),t(I),t(y),t(L),t(C),t(ft),t(P),t(Nt),t(O),t(wt),t(Y),t(K),t(Mt),t(Gt),t(E),t(Lt),t($),t(Q),t(It),t(A),t(U),t(vt),t(X),t(et),t(nt),t(st),t(m),t(St),t(at),t(ot),t(ce),t(lt),t(Ut),t(qt),t(yt),t(Et),t(gt),t(At),t(bt),t(ue),t(Yt),t(Jt),t(Qt),t(Xt),t(te),t(ne),t(se),t(we),t(pt),t(ve),t(B),t(ye),t(R),t(ge),t(it),t(be),t(rt),t(Bt),t(Ct),t(Rt),t(ct),t(Ft),t(_t),t(Vt),t(ht),t(Ot),t(Tt),t(Wt),t(mt),t($t),t(Ht),t(Dt),t(dt),t(S),t(a),t(xe),t(Ce),t(Xe),t(oe),t(_e),t(qe),t(Te),t(He),t(Qe),t(le),t(Me),t(De),t(Le),t(Ne),t(Ie),t(ln),t(Ze),t(pe))}}}class ls extends yn{constructor(h){super(),gn(this,h,null,os,vn,{})}}const ms=[{id:"functional-vs-imperative",title:"Functional VS Imperative",dateWritten:"2024-11-10",summary:"Which is easiest to learn, functional programming or imperative programming? Here's my two cents.",ContentComponent:ls},{id:"ai-the-web-killer",title:"AI - The Web Saviour!",dateWritten:"2024-07-24",summary:"More and more people think that AI will kill the web. I rather think the opposite.",ContentComponent:as},{id:"sleep-vs-delay",title:"sleep() VS delay()",dateWritten:"2024-05-01",summary:"What is the correct way of doing nothing? Here is an explanation of synchronous programming VS asynchronous programming when it comes to waiting.",ContentComponent:Zn},{id:"optimal-input-component",title:"Optimal Input Component",dateWritten:"2023-10-23",summary:"How should a good input component function?",ContentComponent:ns}];export{ms as b};
