import{s as zt,n as O}from"./scheduler.KwwHePks.js";import{S as Yt,i as Wt,e as l,s as i,a as o,g as r,d as p,k as a,h as e,H as S,b as I,w as P,j as E}from"./index.D4HSZ1Nh.js";function ye(ht){let u,X='<em>peterlg</em> is my personal website. It is implemented as a <a href="https://kit.svelte.dev/" target="_blank">SvelteKit</a> project with <a href="https://kit.svelte.dev/docs/adapter-static" target="_blank">the Static-Site Generator adapter</a>, so even though being dynamic, all routes are pre-rendered and available as static pages. And the result is this website that you currently see ðŸ™‚ It is hosted on <a href="https://pages.github.com/" target="_blank">GitHub Pages</a> with the custom domain <code>peterlg.se</code>.',_,m,z='The incredible beautiful logo is the <a href="https://en.wikipedia.org/wiki/Mii" target="_blank">Mii</a> character I use when I play games on Nintendo&#39;s consoles.';return{c(){u=l("p"),u.innerHTML=X,_=i(),m=l("p"),m.innerHTML=z},l(h){u=o(h,"P",{"data-svelte-h":!0}),r(u)!=="svelte-ljesel"&&(u.innerHTML=X),_=p(h),m=o(h,"P",{"data-svelte-h":!0}),r(m)!=="svelte-103hpc1"&&(m.innerHTML=z)},m(h,k){a(h,u,k),a(h,_,k),a(h,m,k)},p:O,i:O,o:O,d(h){h&&(e(u),e(_),e(m))}}}let xe=class extends Yt{constructor(u){super(),Wt(this,u,null,ye,zt,{})}};function _e(ht){let u,X="Motivation",_,m,z='I have never been a big fan of <a href="https://react.dev/learn/writing-markup-with-jsx" target="_blank">JSX</a>, which <a href="https://react.dev/" target="_blank">React</a> is built on. The mantra <em>React is just JavaScript</em> does not sound bad, but it is simply not true; if you need to compile your code to JavaScript, then it was obviously not JavaScript from the start. This is a very good example of misleading advertisement in my opinion.',h,k,kt="Anyway, that is not the reason why I am not a big fan of it. What bothers me with React is this:",J,d,dt="<p>If you have to compile the code, why not also add support for more things, making it even more convenient to use?</p>",j,g,gt='I am thinking for example about support for reactive programming, which most frontend frameworks use these days. For comparison, the frontend framework <a href="#" target="_blank">Svelte</a> is so much more convenient to use than React, because Svelte supports reactive programming out of the box: in Svelte, one simply uses variables and assignment in JavaScript as usual for reactivity;there is no need to use two different variables as in React (the value variable and the setter variable returned from <a href="https://react.dev/reference/react/useState" target="_blank">useState()</a>). Heck, Svelte is more <em>just JavaScript</em> than React!',q,f,ft="But this got me wondering if one can express HTML in JS in a convenient way using <em>just JS</em>, so a compiler is not needed. For example, instead of writing:",G,L,R,U=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	Here is some text.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`,Y,C,T="Just writing the following corresponding JavaScript code could express the same thing:",W,M,H,xt=`<code class="language-js"><span class="token punctuation">&#123;</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">div</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">,</span>
	<span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">12</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">,</span>
	<span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Here is some text.</span><span class="token template-punctuation string">&#96;</span></span>
<span class="token punctuation">&#125;</span></code>`,A,v,vt="However, it is not very convenient to write this code, nor is it very readable. But does a better way exist that eliminates the need for a compiler?",B,w,wt="JavaScript Markup Library",Z,b,bt="I tried to come up with different ways one can express HTML code in JavaScript like this, and the best one I managed to come up with I named <em>JavaScript Markup Library</em> (JSML).",D,y,yt="In JSML, different predefined variables represent different HTML elements. There exists one for each element in HTML. For example, the variable named <code>Div</code> represents a <code>&lt;div&gt;</code> element:",F,x,N,s='<code class="language-js">Div</code>',c,V,_t,ke='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>',Lt,Q,Nt="Do you want to pass some content to an element? No problem, just invoke the variable as a function, and pass it its content (you can pass it as many arguments/children as you want):",Ct,K,Mt,de=`<code class="language-js"><span class="token function">Div</span><span class="token punctuation">(</span>
	<span class="token function">Span</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Hello</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">world!</span><span class="token template-punctuation string">&#96;</span></span>
<span class="token punctuation">)</span></code>`,Ht,$,Tt,ge=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>Hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>
	world!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`,St,tt,Vt="Writing the JS code this way is much more convenient than creating a JS object for each element, as we did before. Heck, I even find this way more convenient than writing the HTML code directly, because I do not need to close elements this way (I only need to write <code>Div()</code>, compared to <code>&lt;div&gt;&lt;/div&gt;</code>).",It,et,Qt='But what about attributes? For that, I found using the <a href="https://en.wikipedia.org/wiki/Fluent_interface" target="_blank">Fluent Interface</a> to be most convenient:',Pt,at,Et,fe='<code class="language-js"><span class="token function">Div</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Hello</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">class</span><span class="token punctuation">(</span><span class="token string">"theClass"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">theId</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span></code>',Jt,nt,jt,ve=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>theClass<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>theId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
	Hello
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`,qt,st,Kt="This works good, but it can get messy if you have nested elements:",Gt,lt,Rt,we=`<code class="language-js"><span class="token function">Div</span><span class="token punctuation">(</span>
	<span class="token function">Span</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Row 1</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token function">Span</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Row 2</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">class</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">theClass</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">theId</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span> <span class="token comment">// Hard to see that these are attributes to the Div!</span></code>`,Ut,ot,$t='I think the code would be easier to read if the attributes would be closer to the "start tag", as it is in ordinary HTML. So... Why force the programmer to first pass it the children? Turns out that we do not need that requirement. Instead, we can simply write:',At,it,Bt,be=`<code class="language-js">Div<span class="token punctuation">.</span><span class="token function">class</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">theClass</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">theId</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">(</span>
	<span class="token function">Span</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Row 1</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token function">Span</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">Row 2</span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span></code>`,Zt,pt,te='Ah, beautiful! This is all valid JavaScript syntax, so the only big question remaining is: Is it possible to use this JS syntax to construct an HTML abstract syntax tree? And the answer is <em>Yes</em>! Using <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy" target="_blank">JavaScript Proxies</a>, much is possible!',Dt,rt,ee='I do not have time to explain the implementation of the library, but the curious ones can find that out themselves by reading the source code in the GitHub repository <a href="https://github.com/PeppeL-G/jsml" target="_blank">PeppeL-G/jsml</a>. There you can also find an implementation of an <a href="https://expressjs.com/en/guide/using-template-engines.html" target="_blank">Express Template Engine</a> that uses JSML, which I used to quickly test how well using JSML in practice would be.',Ft,ct,ae="Conclusions",Ot,ut,ne="I like JSML, but I have never had the time and energy to thoroughly test how well it works in practice. I think writing HTML code in JSML can be more convenient, and I think the code is at least equally readable as ordinary HTML code. And, unlike JSX, no compiler is needed, and code editors will not need any special plugin to properly highlight the code, etc. <em>JSML is just JavaScript</em>.",Xt,mt,se="However, one thing that worries me is performance. Proxies are slow, and JSML uses them a lot. Doing some performance measurements would be really interesting. BUT, if it would turn out that the performance is very bad, I imagine one can use a compiler that compiles JSML to the same output as JSX does, so compiled JSML should in theory be equally fast as compiled JSX (unless there is something I am missing). So it is nice that one can use JSML as it is (making it easy to get started), but also theoretically being able to use it with a compiler if you need a performance boost (for professional apps) ðŸ™‚";return{c(){u=l("h2"),u.textContent=X,_=i(),m=l("p"),m.innerHTML=z,h=i(),k=l("p"),k.textContent=kt,J=i(),d=l("blockquote"),d.innerHTML=dt,j=i(),g=l("p"),g.innerHTML=gt,q=i(),f=l("p"),f.innerHTML=ft,G=i(),L=l("pre"),R=new S(!1),Y=i(),C=l("p"),C.textContent=T,W=i(),M=l("pre"),H=new S(!1),A=i(),v=l("p"),v.textContent=vt,B=i(),w=l("h2"),w.textContent=wt,Z=i(),b=l("p"),b.innerHTML=bt,D=i(),y=l("p"),y.innerHTML=yt,F=i(),x=l("pre"),N=new S(!1),c=i(),V=l("pre"),_t=new S(!1),Lt=i(),Q=l("p"),Q.textContent=Nt,Ct=i(),K=l("pre"),Mt=new S(!1),Ht=i(),$=l("pre"),Tt=new S(!1),St=i(),tt=l("p"),tt.innerHTML=Vt,It=i(),et=l("p"),et.innerHTML=Qt,Pt=i(),at=l("pre"),Et=new S(!1),Jt=i(),nt=l("pre"),jt=new S(!1),qt=i(),st=l("p"),st.textContent=Kt,Gt=i(),lt=l("pre"),Rt=new S(!1),Ut=i(),ot=l("p"),ot.textContent=$t,At=i(),it=l("pre"),Bt=new S(!1),Zt=i(),pt=l("p"),pt.innerHTML=te,Dt=i(),rt=l("p"),rt.innerHTML=ee,Ft=i(),ct=l("h2"),ct.textContent=ae,Ot=i(),ut=l("p"),ut.innerHTML=ne,Xt=i(),mt=l("p"),mt.textContent=se,this.h()},l(t){u=o(t,"H2",{"data-svelte-h":!0}),r(u)!=="svelte-19l56be"&&(u.textContent=X),_=p(t),m=o(t,"P",{"data-svelte-h":!0}),r(m)!=="svelte-18x1jwe"&&(m.innerHTML=z),h=p(t),k=o(t,"P",{"data-svelte-h":!0}),r(k)!=="svelte-105s2fe"&&(k.textContent=kt),J=p(t),d=o(t,"BLOCKQUOTE",{"data-svelte-h":!0}),r(d)!=="svelte-1tu2sr9"&&(d.innerHTML=dt),j=p(t),g=o(t,"P",{"data-svelte-h":!0}),r(g)!=="svelte-44n67z"&&(g.innerHTML=gt),q=p(t),f=o(t,"P",{"data-svelte-h":!0}),r(f)!=="svelte-n5sc2q"&&(f.innerHTML=ft),G=p(t),L=o(t,"PRE",{class:!0});var n=I(L);R=P(n,!1),n.forEach(e),Y=p(t),C=o(t,"P",{"data-svelte-h":!0}),r(C)!=="svelte-16m4e7l"&&(C.textContent=T),W=p(t),M=o(t,"PRE",{class:!0});var le=I(M);H=P(le,!1),le.forEach(e),A=p(t),v=o(t,"P",{"data-svelte-h":!0}),r(v)!=="svelte-z6xy3k"&&(v.textContent=vt),B=p(t),w=o(t,"H2",{"data-svelte-h":!0}),r(w)!=="svelte-woakxk"&&(w.textContent=wt),Z=p(t),b=o(t,"P",{"data-svelte-h":!0}),r(b)!=="svelte-1fnersz"&&(b.innerHTML=bt),D=p(t),y=o(t,"P",{"data-svelte-h":!0}),r(y)!=="svelte-7xsb1k"&&(y.innerHTML=yt),F=p(t),x=o(t,"PRE",{class:!0});var oe=I(x);N=P(oe,!1),oe.forEach(e),c=p(t),V=o(t,"PRE",{class:!0});var ie=I(V);_t=P(ie,!1),ie.forEach(e),Lt=p(t),Q=o(t,"P",{"data-svelte-h":!0}),r(Q)!=="svelte-c7k7c0"&&(Q.textContent=Nt),Ct=p(t),K=o(t,"PRE",{class:!0});var pe=I(K);Mt=P(pe,!1),pe.forEach(e),Ht=p(t),$=o(t,"PRE",{class:!0});var re=I($);Tt=P(re,!1),re.forEach(e),St=p(t),tt=o(t,"P",{"data-svelte-h":!0}),r(tt)!=="svelte-2i0lvz"&&(tt.innerHTML=Vt),It=p(t),et=o(t,"P",{"data-svelte-h":!0}),r(et)!=="svelte-10095g"&&(et.innerHTML=Qt),Pt=p(t),at=o(t,"PRE",{class:!0});var ce=I(at);Et=P(ce,!1),ce.forEach(e),Jt=p(t),nt=o(t,"PRE",{class:!0});var ue=I(nt);jt=P(ue,!1),ue.forEach(e),qt=p(t),st=o(t,"P",{"data-svelte-h":!0}),r(st)!=="svelte-szou3m"&&(st.textContent=Kt),Gt=p(t),lt=o(t,"PRE",{class:!0});var me=I(lt);Rt=P(me,!1),me.forEach(e),Ut=p(t),ot=o(t,"P",{"data-svelte-h":!0}),r(ot)!=="svelte-om9wx9"&&(ot.textContent=$t),At=p(t),it=o(t,"PRE",{class:!0});var he=I(it);Bt=P(he,!1),he.forEach(e),Zt=p(t),pt=o(t,"P",{"data-svelte-h":!0}),r(pt)!=="svelte-5d78tl"&&(pt.innerHTML=te),Dt=p(t),rt=o(t,"P",{"data-svelte-h":!0}),r(rt)!=="svelte-2jvkxc"&&(rt.innerHTML=ee),Ft=p(t),ct=o(t,"H2",{"data-svelte-h":!0}),r(ct)!=="svelte-lmdog2"&&(ct.textContent=ae),Ot=p(t),ut=o(t,"P",{"data-svelte-h":!0}),r(ut)!=="svelte-1w2f0vt"&&(ut.innerHTML=ne),Xt=p(t),mt=o(t,"P",{"data-svelte-h":!0}),r(mt)!=="svelte-qx6cy6"&&(mt.textContent=se),this.h()},h(){R.a=null,E(L,"class","language-html"),H.a=null,E(M,"class","language-js"),N.a=null,E(x,"class","language-js"),_t.a=null,E(V,"class","language-html"),Mt.a=null,E(K,"class","language-js"),Tt.a=null,E($,"class","language-html"),Et.a=null,E(at,"class","language-js"),jt.a=null,E(nt,"class","language-html"),Rt.a=null,E(lt,"class","language-js"),Bt.a=null,E(it,"class","language-js")},m(t,n){a(t,u,n),a(t,_,n),a(t,m,n),a(t,h,n),a(t,k,n),a(t,J,n),a(t,d,n),a(t,j,n),a(t,g,n),a(t,q,n),a(t,f,n),a(t,G,n),a(t,L,n),R.m(U,L),a(t,Y,n),a(t,C,n),a(t,W,n),a(t,M,n),H.m(xt,M),a(t,A,n),a(t,v,n),a(t,B,n),a(t,w,n),a(t,Z,n),a(t,b,n),a(t,D,n),a(t,y,n),a(t,F,n),a(t,x,n),N.m(s,x),a(t,c,n),a(t,V,n),_t.m(ke,V),a(t,Lt,n),a(t,Q,n),a(t,Ct,n),a(t,K,n),Mt.m(de,K),a(t,Ht,n),a(t,$,n),Tt.m(ge,$),a(t,St,n),a(t,tt,n),a(t,It,n),a(t,et,n),a(t,Pt,n),a(t,at,n),Et.m(fe,at),a(t,Jt,n),a(t,nt,n),jt.m(ve,nt),a(t,qt,n),a(t,st,n),a(t,Gt,n),a(t,lt,n),Rt.m(we,lt),a(t,Ut,n),a(t,ot,n),a(t,At,n),a(t,it,n),Bt.m(be,it),a(t,Zt,n),a(t,pt,n),a(t,Dt,n),a(t,rt,n),a(t,Ft,n),a(t,ct,n),a(t,Ot,n),a(t,ut,n),a(t,Xt,n),a(t,mt,n)},p:O,i:O,o:O,d(t){t&&(e(u),e(_),e(m),e(h),e(k),e(J),e(d),e(j),e(g),e(q),e(f),e(G),e(L),e(Y),e(C),e(W),e(M),e(A),e(v),e(B),e(w),e(Z),e(b),e(D),e(y),e(F),e(x),e(c),e(V),e(Lt),e(Q),e(Ct),e(K),e(Ht),e($),e(St),e(tt),e(It),e(et),e(Pt),e(at),e(Jt),e(nt),e(qt),e(st),e(Gt),e(lt),e(Ut),e(ot),e(At),e(it),e(Zt),e(pt),e(Dt),e(rt),e(Ft),e(ct),e(Ot),e(ut),e(Xt),e(mt))}}}let Le=class extends Yt{constructor(u){super(),Wt(this,u,null,_e,zt,{})}};function Ce(ht){let u,X="Programming has always been hard to learn.",_,m,z='<p><em>Programming is one of the most difficult branches of applied mathematics; the poorer mathematicians had better remain pure mathematicians.</em></p> <p>-- <a href="https://www.brainyquote.com/quotes/edsger_dijkstra_204342" rel="nofollow" target="_blank">Edsger Dijkstra</a></p>',h,k,kt="To instruct a computer what to do, you must first learn how to think like a computer. You basically need to develop a second brain, that thinks and functions the same way as the computer do! And even though this is not easy, programmer after programmer has over the years proved that this is possible. Even when all hope seemed lost, and programming appeared too be too hard to learn, their curiosity and will to learn kept them trying, and after much effort, they finally did learn it!",J,d,dt="I remember my own teenage years, where I over many months tried to learn programming, and gave up on learning it at least 3-4 times. But curiosity and will to learn it always drove me back after a week or two. And each time I learned a little bit more than before, and slowly I got better and better at it, and after having passed that famous threshold, things got downhill, and it all become much easier and more fun!",j,g,gt="However, today, many need to learn programming who lacks the will to learn it, and aren't very curious about how computers work. And when these people take programming courses, it will be very hard for them to pass the courses, because they find them boring and hard. That's totally understandable, but none the less a big problem.",q,f,ft="So, how can we make programming easier and more fun to learn for these people?",G,L,R,U,Y='My attempt to make programming easier and more fun to learn is by creating an app development framework/platform that is as easy to use as possible. I call it <a href="https://bagawork.com/" rel="nofollow" target="_blank">Bagawork</a>. Unlike professional solutions, Bagawork has no focus on good performance or making the code very scalable (things that usually makes them hard to learn and use), only to make it as easy to learn and teach programming as possible. And there&#39;s no drag-and-drop programming using blocks or similar, only code writing, since the intention is to teach programming through code writing. For more info about the design decisions, see the <a href="https://bagawork.com/motivation/" rel="nofollow" target="_blank">Motivation</a> page.',C,T,W='Bagawork is really easy to get started with. All you need to do is to open the <a href="https://bagawork.com/editor/" rel="nofollow" target="_blank">Online Editor</a> in a web browser on a desktop computer, and you get a simple &quot;<em>hello, world</em>&quot; app to start with. No need to install anything. No need to manually execute any compilation steps, or similar. The editor simply directly shows what the app looks like, and you can run it directly in the web browser.',M,H,xt="The architecture of an app implemented in Bagawork is also really simple. The app primarily consists of different pages, each with their own graphical user interface (GUI), and one page at a time is shown to the user. When the user has interacted with a page (such as clicked on a button), the user is shown another page in the app. This simple architecture makes it really easy to understand how the app works, and it's also easy to visualize how the app works, which you can also see in the editor.",A,v,vt="Since the architecture itself is so small, Bagawork is really easy to learn, because there is so little to learn! Except for... The GUI... ðŸ˜’ First I considered to not use a GUI in the framework at all (&quot;<em>too much to learn for beginners</em>&quot;), but I think it&#39;s a must to make learning programming more fun for most; impatient young people these days want to feel like they are creating &quot;real&quot; apps as soon as possible, and don&#39;t want to start with the basics in programming, such as loops and conditional statements.",B,w,wt='So, a way to create the GUI was needed. Instead of using HTML and CSS, I planned to add my own GUI components to the framework, that are easier to use for beginners. And first I intended to use <a href="https://react.dev/learn/writing-markup-with-jsx" rel="nofollow" target="_blank">JSX</a> for the GUI, but I quickly realized that learning two languages (JavaScript + XML) would probably be confusing for beginners, so I started to think about the simplest way to use GUI components using only JavaScript. That&#39;s actually how <a href="https://github.com/PeppeL-G/jsml" rel="nofollow" target="_blank">JSML</a> was created. And I thought it worked really well, so I adopted the same strategy for using <a href="https://bagawork.com/documentation" rel="nofollow" target="_blank">the GUI components in Bagawork</a>.',Z,b,bt="What more do beginners need? Well:",D,y,yt='<li>Easy to follow <a href="https://bagawork.com/tutorials/" rel="nofollow" target="_blank">tutorials</a></li> <li>Easy to read and understand <a href="https://bagawork.com/documentation/" rel="nofollow" target="_blank">documentation</a><ul><li>Which also includes a lot of examples, and users can also easily change the code in the examples to quickly test how things work</li></ul></li> <li>Easy way to share code using only <a href="https://bagawork.com/editor#eNq1Um1Lg1AU/iu386UJMpwxCL+ERcSgIrZFjRzsoscpuXvl3iM1hv+962wyZRYEfVDP+/OCO+B5Dt4OQhkheBBmXGv2sPXznOEnoYg0M/EuEAFVT6iQE86IK3riaxxYdYcUUqEEaxpVtayXSihtiGUWodLgve0gjcAb2SD4pkLcr4ANMo410it4ziFemLhc2pCbe63N+tikTlrEG/yGfJV02N8VaZf33IwPybwGq3mCrLrJYqkYJalmxiFmPiiqcsRSYcrInqf3ZyurpdOGT/BcxwjYgnfhNOTnuMkzA9wS0eLt6/dJ7EdF9hfyU/mhh2GSZpFCMahbAc1yHqJ9yI4E+grZVhZsb6KRwgUbXV6tLPv05o3Mio04AdAdDOi6IJLiG+ZRHp38ZXaB+ofhQ8fq/FS1lW7HyltBqPw1/r+RLwmnc115qZi5329hS+vIOZprd8Z9Hbd3xx33oHbMWpZf5f9oUA==" rel="nofollow" target="_blank">links</a></li> <li>Easy way to distribute apps using <a href="https://bagawork.com/run#eNq1Um1Lg1AU/iu386UJMpwxCL+ERcSgIrZFjRzsoscpuXvl3iM1hv+962wyZRYEfVDP+/OCO+B5Dt4OQhkheBBmXGv2sPXznOEnoYg0M/EuEAFVT6iQE86IK3riaxxYdYcUUqEEaxpVtayXSihtiGUWodLgve0gjcAb2SD4pkLcr4ANMo410it4ziFemLhc2pCbe63N+tikTlrEG/yGfJV02N8VaZf33IwPybwGq3mCrLrJYqkYJalmxiFmPiiqcsRSYcrInqf3ZyurpdOGT/BcxwjYgnfhNOTnuMkzA9wS0eLt6/dJ7EdF9hfyU/mhh2GSZpFCMahbAc1yHqJ9yI4E+grZVhZsb6KRwgUbXV6tLPv05o3Mio04AdAdDOi6IJLiG+ZRHp38ZXaB+ofhQ8fq/FS1lW7HyltBqPw1/r+RLwmnc115qZi5329hS+vIOZprd8Z9Hbd3xx33oHbMWpZf5f9oUA==" rel="nofollow" target="_blank">links</a> (meant to be open on a smartphone)<ul><li>Though GitHub probably doesn&#39;t like that they are being used as a platform to run apps on, so I&#39;m working on such as platform myself as well, which I&#39;ll hopefully write more about on this website soon!</li></ul></li>',F,x,N='Even though Bagawork is far from finished, there is still a lot more to say about it. But this post is long as it is, so that&#39;s all info you get for now ^^ To learn more and stay up-to-date, check out <a href="https://bagawork.com/" rel="nofollow" target="_blank">the Bagawork webite</a>.';return{c(){u=l("p"),u.textContent=X,_=i(),m=l("blockquote"),m.innerHTML=z,h=i(),k=l("p"),k.textContent=kt,J=i(),d=l("p"),d.textContent=dt,j=i(),g=l("p"),g.textContent=gt,q=i(),f=l("p"),f.textContent=ft,G=i(),L=l("hr"),R=i(),U=l("p"),U.innerHTML=Y,C=i(),T=l("p"),T.innerHTML=W,M=i(),H=l("p"),H.textContent=xt,A=i(),v=l("p"),v.innerHTML=vt,B=i(),w=l("p"),w.innerHTML=wt,Z=i(),b=l("p"),b.textContent=bt,D=i(),y=l("ul"),y.innerHTML=yt,F=i(),x=l("p"),x.innerHTML=N},l(s){u=o(s,"P",{"data-svelte-h":!0}),r(u)!=="svelte-143fv2e"&&(u.textContent=X),_=p(s),m=o(s,"BLOCKQUOTE",{"data-svelte-h":!0}),r(m)!=="svelte-4cin3r"&&(m.innerHTML=z),h=p(s),k=o(s,"P",{"data-svelte-h":!0}),r(k)!=="svelte-gejj4"&&(k.textContent=kt),J=p(s),d=o(s,"P",{"data-svelte-h":!0}),r(d)!=="svelte-u84bkp"&&(d.textContent=dt),j=p(s),g=o(s,"P",{"data-svelte-h":!0}),r(g)!=="svelte-1sbjafi"&&(g.textContent=gt),q=p(s),f=o(s,"P",{"data-svelte-h":!0}),r(f)!=="svelte-1o8ukvs"&&(f.textContent=ft),G=p(s),L=o(s,"HR",{}),R=p(s),U=o(s,"P",{"data-svelte-h":!0}),r(U)!=="svelte-1vnmnob"&&(U.innerHTML=Y),C=p(s),T=o(s,"P",{"data-svelte-h":!0}),r(T)!=="svelte-1f5v4wx"&&(T.innerHTML=W),M=p(s),H=o(s,"P",{"data-svelte-h":!0}),r(H)!=="svelte-1idkdqy"&&(H.textContent=xt),A=p(s),v=o(s,"P",{"data-svelte-h":!0}),r(v)!=="svelte-1j78zdb"&&(v.innerHTML=vt),B=p(s),w=o(s,"P",{"data-svelte-h":!0}),r(w)!=="svelte-zd9n9b"&&(w.innerHTML=wt),Z=p(s),b=o(s,"P",{"data-svelte-h":!0}),r(b)!=="svelte-1o0a1ww"&&(b.textContent=bt),D=p(s),y=o(s,"UL",{"data-svelte-h":!0}),r(y)!=="svelte-qm8oyb"&&(y.innerHTML=yt),F=p(s),x=o(s,"P",{"data-svelte-h":!0}),r(x)!=="svelte-1avusi7"&&(x.innerHTML=N)},m(s,c){a(s,u,c),a(s,_,c),a(s,m,c),a(s,h,c),a(s,k,c),a(s,J,c),a(s,d,c),a(s,j,c),a(s,g,c),a(s,q,c),a(s,f,c),a(s,G,c),a(s,L,c),a(s,R,c),a(s,U,c),a(s,C,c),a(s,T,c),a(s,M,c),a(s,H,c),a(s,A,c),a(s,v,c),a(s,B,c),a(s,w,c),a(s,Z,c),a(s,b,c),a(s,D,c),a(s,y,c),a(s,F,c),a(s,x,c)},p:O,i:O,o:O,d(s){s&&(e(u),e(_),e(m),e(h),e(k),e(J),e(d),e(j),e(g),e(q),e(f),e(G),e(L),e(R),e(U),e(C),e(T),e(M),e(H),e(A),e(v),e(B),e(w),e(Z),e(b),e(D),e(y),e(F),e(x))}}}class Me extends Yt{constructor(u){super(),Wt(this,u,null,Ce,zt,{})}}const Pe=[{id:"bagawork",title:"Bagawork",introduction:"Learning programming can be really hard and boring. Let's make it easier and more fun!",DescriptionComponent:Me,gitHubLink:"https://github.com/PeppeL-G/bagawork",websiteLink:"https://bagawork.com",datePosted:"2024-07-23"},{id:"jsml",title:"JSML",introduction:"Why complicate things with JSX? Use JSML instead!",DescriptionComponent:Le,gitHubLink:"https://github.com/PeppeL-G/jsml",websiteLink:"https://github.com/PeppeL-G/jsml?tab=readme-ov-file#jsml---javascript-markup-library",datePosted:"2024-04-14"},{id:"peterlg",title:"Peter L-G",introduction:"Everybody needs a personal website, right? Here is mine ðŸ™‚",DescriptionComponent:xe,gitHubLink:"https://github.com/PeppeL-G/peterlg",websiteLink:"http://peterlg.se",datePosted:"2023-02-13"}];export{Pe as p};
